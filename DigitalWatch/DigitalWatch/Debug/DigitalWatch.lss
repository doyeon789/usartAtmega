
DigitalWatch.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000366  00800100  00001152  000011e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001152  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002c  00800466  00800466  0000154c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000154c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000015a8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  000015e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000130f  00000000  00000000  000016ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a09  00000000  00000000  000029bb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a17  00000000  00000000  000033c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000348  00000000  00000000  00003ddc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005f1  00000000  00000000  00004124  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a8f  00000000  00000000  00004715  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  000051a4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	07 c1       	rjmp	.+526    	; 0x214 <__vector_1>
       6:	00 00       	nop
       8:	5f c0       	rjmp	.+190    	; 0xc8 <__bad_interrupt>
       a:	00 00       	nop
       c:	5d c0       	rjmp	.+186    	; 0xc8 <__bad_interrupt>
       e:	00 00       	nop
      10:	5b c0       	rjmp	.+182    	; 0xc8 <__bad_interrupt>
      12:	00 00       	nop
      14:	5e c1       	rjmp	.+700    	; 0x2d2 <__vector_5>
      16:	00 00       	nop
      18:	a2 c1       	rjmp	.+836    	; 0x35e <__vector_6>
      1a:	00 00       	nop
      1c:	e7 c1       	rjmp	.+974    	; 0x3ec <__vector_7>
      1e:	00 00       	nop
      20:	2d c2       	rjmp	.+1114   	; 0x47c <__vector_8>
      22:	00 00       	nop
      24:	51 c0       	rjmp	.+162    	; 0xc8 <__bad_interrupt>
      26:	00 00       	nop
      28:	4f c0       	rjmp	.+158    	; 0xc8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4d c0       	rjmp	.+154    	; 0xc8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4b c0       	rjmp	.+150    	; 0xc8 <__bad_interrupt>
      32:	00 00       	nop
      34:	49 c0       	rjmp	.+146    	; 0xc8 <__bad_interrupt>
      36:	00 00       	nop
      38:	47 c0       	rjmp	.+142    	; 0xc8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	45 c0       	rjmp	.+138    	; 0xc8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	53 c2       	rjmp	.+1190   	; 0x4e8 <__vector_16>
      42:	00 00       	nop
      44:	41 c0       	rjmp	.+130    	; 0xc8 <__bad_interrupt>
      46:	00 00       	nop
      48:	3f c0       	rjmp	.+126    	; 0xc8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3d c0       	rjmp	.+122    	; 0xc8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3b c0       	rjmp	.+118    	; 0xc8 <__bad_interrupt>
      52:	00 00       	nop
      54:	39 c0       	rjmp	.+114    	; 0xc8 <__bad_interrupt>
      56:	00 00       	nop
      58:	37 c0       	rjmp	.+110    	; 0xc8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	35 c0       	rjmp	.+106    	; 0xc8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	33 c0       	rjmp	.+102    	; 0xc8 <__bad_interrupt>
      62:	00 00       	nop
      64:	31 c0       	rjmp	.+98     	; 0xc8 <__bad_interrupt>
      66:	00 00       	nop
      68:	6b c2       	rjmp	.+1238   	; 0x540 <__vector_26>
      6a:	00 00       	nop
      6c:	2d c0       	rjmp	.+90     	; 0xc8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2b c0       	rjmp	.+86     	; 0xc8 <__bad_interrupt>
      72:	00 00       	nop
      74:	29 c0       	rjmp	.+82     	; 0xc8 <__bad_interrupt>
      76:	00 00       	nop
      78:	27 c0       	rjmp	.+78     	; 0xc8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	25 c0       	rjmp	.+74     	; 0xc8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	23 c0       	rjmp	.+70     	; 0xc8 <__bad_interrupt>
      82:	00 00       	nop
      84:	21 c0       	rjmp	.+66     	; 0xc8 <__bad_interrupt>
      86:	00 00       	nop
      88:	1f c0       	rjmp	.+62     	; 0xc8 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	14 e0       	ldi	r17, 0x04	; 4
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e2 e5       	ldi	r30, 0x52	; 82
      a0:	f1 e1       	ldi	r31, 0x11	; 17
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a6 36       	cpi	r26, 0x66	; 102
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	24 e0       	ldi	r18, 0x04	; 4
      b4:	a6 e6       	ldi	r26, 0x66	; 102
      b6:	b4 e0       	ldi	r27, 0x04	; 4
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a2 39       	cpi	r26, 0x92	; 146
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	5a d4       	rcall	.+2228   	; 0x978 <main>
      c4:	0c 94 a7 08 	jmp	0x114e	; 0x114e <_exit>

000000c8 <__bad_interrupt>:
      c8:	9b cf       	rjmp	.-202    	; 0x0 <__vectors>

000000ca <usart0_init>:
int isAlarm_set = 0;		// 알람 설정이 와료되었는지 확인하는 변수

//* [함수] *//
// 통신 함수 초기화
void usart0_init(unsigned int UBRR0){
	UBRR0L=(unsigned char)UBRR0;
      ca:	89 b9       	out	0x09, r24	; 9
	UCSR0B=(1<<TXEN0)|(1<<RXEN0);
      cc:	88 e1       	ldi	r24, 0x18	; 24
      ce:	8a b9       	out	0x0a, r24	; 10
      d0:	08 95       	ret

000000d2 <tx0_ch>:
}
void tx0_ch(unsigned char data)
{
	while(!(UCSR0A & (1<<UDRE0)));
      d2:	5d 9b       	sbis	0x0b, 5	; 11
      d4:	fe cf       	rjmp	.-4      	; 0xd2 <tx0_ch>
	UDR0=data;
      d6:	8c b9       	out	0x0c, r24	; 12
      d8:	08 95       	ret

000000da <tx0_str>:
}
void tx0_str(unsigned char *str){
      da:	cf 93       	push	r28
      dc:	df 93       	push	r29
      de:	ec 01       	movw	r28, r24
	while(*str){tx0_ch(*str++);}
      e0:	02 c0       	rjmp	.+4      	; 0xe6 <tx0_str+0xc>
      e2:	21 96       	adiw	r28, 0x01	; 1
      e4:	f6 df       	rcall	.-20     	; 0xd2 <tx0_ch>
      e6:	88 81       	ld	r24, Y
      e8:	81 11       	cpse	r24, r1
      ea:	fb cf       	rjmp	.-10     	; 0xe2 <tx0_str+0x8>
}
      ec:	df 91       	pop	r29
      ee:	cf 91       	pop	r28
      f0:	08 95       	ret

000000f2 <rx0_ch>:
char rx0_ch(){
	while(!(UCSR0A & (1<<UDRE0)));
      f2:	5d 9b       	sbis	0x0b, 5	; 11
      f4:	fe cf       	rjmp	.-4      	; 0xf2 <rx0_ch>
	return UDR0;
      f6:	8c b1       	in	r24, 0x0c	; 12
}
      f8:	08 95       	ret

000000fa <port_init>:

// 포트 초기화 함수
void port_init() {
	tx0_str("[2.port_init]\r\n");
      fa:	84 e1       	ldi	r24, 0x14	; 20
      fc:	91 e0       	ldi	r25, 0x01	; 1
      fe:	ed df       	rcall	.-38     	; 0xda <tx0_str>
    DDRA = 0xff; // led
     100:	8f ef       	ldi	r24, 0xFF	; 255
     102:	8a bb       	out	0x1a, r24	; 26
    DDRG = 0x0f; // fnd sel
     104:	9f e0       	ldi	r25, 0x0F	; 15
     106:	90 93 64 00 	sts	0x0064, r25	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
	DDRC = 0xff; // fnd data
     10a:	84 bb       	out	0x14, r24	; 20
    DDRE = 0x00; // switch 4~7
     10c:	12 b8       	out	0x02, r1	; 2
	DDRD = 0x00; // switch 0
     10e:	11 ba       	out	0x11, r1	; 17
	DDRB |= (1<<4); //buzzer
     110:	87 b3       	in	r24, 0x17	; 23
     112:	80 61       	ori	r24, 0x10	; 16
     114:	87 bb       	out	0x17, r24	; 23
     116:	08 95       	ret

00000118 <fnd_clear>:
}

//fnd값 초기화 하는 함수
void fnd_clear(){
	for (int i = 0; i < 4 ;i++) {
     118:	80 e0       	ldi	r24, 0x00	; 0
     11a:	90 e0       	ldi	r25, 0x00	; 0
     11c:	0f c0       	rjmp	.+30     	; 0x13c <fnd_clear+0x24>
		PORTG = fnd_sel[i];
     11e:	fc 01       	movw	r30, r24
     120:	e0 5f       	subi	r30, 0xF0	; 240
     122:	fe 4f       	sbci	r31, 0xFE	; 254
     124:	20 81       	ld	r18, Z
     126:	20 93 65 00 	sts	0x0065, r18	; 0x800065 <__TEXT_REGION_LENGTH__+0x7e0065>
		PORTC = ~0;
     12a:	2f ef       	ldi	r18, 0xFF	; 255
     12c:	25 bb       	out	0x15, r18	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     12e:	ef e9       	ldi	r30, 0x9F	; 159
     130:	ff e0       	ldi	r31, 0x0F	; 15
     132:	31 97       	sbiw	r30, 0x01	; 1
     134:	f1 f7       	brne	.-4      	; 0x132 <fnd_clear+0x1a>
     136:	00 c0       	rjmp	.+0      	; 0x138 <fnd_clear+0x20>
     138:	00 00       	nop
	DDRB |= (1<<4); //buzzer
}

//fnd값 초기화 하는 함수
void fnd_clear(){
	for (int i = 0; i < 4 ;i++) {
     13a:	01 96       	adiw	r24, 0x01	; 1
     13c:	84 30       	cpi	r24, 0x04	; 4
     13e:	91 05       	cpc	r25, r1
     140:	74 f3       	brlt	.-36     	; 0x11e <fnd_clear+0x6>
		PORTG = fnd_sel[i];
		PORTC = ~0;
		_delay_ms(1);
	}
}
     142:	08 95       	ret

00000144 <fnd_control>:
// FND 제어 함수
void fnd_control(int second) {
     144:	ef 92       	push	r14
     146:	ff 92       	push	r15
     148:	0f 93       	push	r16
     14a:	1f 93       	push	r17
     14c:	cf 93       	push	r28
     14e:	df 93       	push	r29
     150:	8c 01       	movw	r16, r24
	int hour = second/60;
     152:	6c e3       	ldi	r22, 0x3C	; 60
     154:	70 e0       	ldi	r23, 0x00	; 0
     156:	f9 d4       	rcall	.+2546   	; 0xb4a <__divmodhi4>
     158:	7b 01       	movw	r14, r22
     15a:	9c 01       	movw	r18, r24
	int minute = second%60;
	
    PORTG = fnd_sel[0];
     15c:	c0 e1       	ldi	r28, 0x10	; 16
     15e:	d1 e0       	ldi	r29, 0x01	; 1
     160:	88 81       	ld	r24, Y
     162:	e5 e6       	ldi	r30, 0x65	; 101
     164:	f0 e0       	ldi	r31, 0x00	; 0
     166:	80 83       	st	Z, r24
   	PORTC = ~fnd_data[hour / 10];
     168:	c8 01       	movw	r24, r16
     16a:	68 e5       	ldi	r22, 0x58	; 88
     16c:	72 e0       	ldi	r23, 0x02	; 2
     16e:	ed d4       	rcall	.+2522   	; 0xb4a <__divmodhi4>
     170:	db 01       	movw	r26, r22
     172:	aa 5f       	subi	r26, 0xFA	; 250
     174:	be 4f       	sbci	r27, 0xFE	; 254
     176:	8c 91       	ld	r24, X
     178:	80 95       	com	r24
     17a:	85 bb       	out	0x15, r24	; 21
     17c:	8f e9       	ldi	r24, 0x9F	; 159
     17e:	9f e0       	ldi	r25, 0x0F	; 15
     180:	01 97       	sbiw	r24, 0x01	; 1
     182:	f1 f7       	brne	.-4      	; 0x180 <fnd_control+0x3c>
     184:	00 c0       	rjmp	.+0      	; 0x186 <fnd_control+0x42>
     186:	00 00       	nop
   	_delay_ms(1);
    
 	PORTG = fnd_sel[1];
     188:	89 81       	ldd	r24, Y+1	; 0x01
     18a:	80 83       	st	Z, r24
 	PORTC = ~fnd_data[hour % 10] + 128;
     18c:	0a e0       	ldi	r16, 0x0A	; 10
     18e:	10 e0       	ldi	r17, 0x00	; 0
     190:	c7 01       	movw	r24, r14
     192:	b8 01       	movw	r22, r16
     194:	da d4       	rcall	.+2484   	; 0xb4a <__divmodhi4>
     196:	dc 01       	movw	r26, r24
     198:	aa 5f       	subi	r26, 0xFA	; 250
     19a:	be 4f       	sbci	r27, 0xFE	; 254
     19c:	9c 91       	ld	r25, X
     19e:	8f e7       	ldi	r24, 0x7F	; 127
     1a0:	89 1b       	sub	r24, r25
     1a2:	85 bb       	out	0x15, r24	; 21
     1a4:	af e9       	ldi	r26, 0x9F	; 159
     1a6:	bf e0       	ldi	r27, 0x0F	; 15
     1a8:	11 97       	sbiw	r26, 0x01	; 1
     1aa:	f1 f7       	brne	.-4      	; 0x1a8 <fnd_control+0x64>
     1ac:	00 c0       	rjmp	.+0      	; 0x1ae <fnd_control+0x6a>
     1ae:	00 00       	nop
  	_delay_ms(1);
    
   	PORTG = fnd_sel[2];
     1b0:	8a 81       	ldd	r24, Y+2	; 0x02
    PORTC = ~fnd_data[minute / 10];
     1b2:	80 83       	st	Z, r24
     1b4:	c9 01       	movw	r24, r18
     1b6:	b8 01       	movw	r22, r16
     1b8:	c8 d4       	rcall	.+2448   	; 0xb4a <__divmodhi4>
     1ba:	db 01       	movw	r26, r22
     1bc:	aa 5f       	subi	r26, 0xFA	; 250
     1be:	be 4f       	sbci	r27, 0xFE	; 254
     1c0:	2c 91       	ld	r18, X
     1c2:	20 95       	com	r18
     1c4:	25 bb       	out	0x15, r18	; 21
     1c6:	af e9       	ldi	r26, 0x9F	; 159
     1c8:	bf e0       	ldi	r27, 0x0F	; 15
     1ca:	11 97       	sbiw	r26, 0x01	; 1
     1cc:	f1 f7       	brne	.-4      	; 0x1ca <fnd_control+0x86>
     1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <fnd_control+0x8c>
     1d0:	00 00       	nop
    _delay_ms(1);
    
    PORTG = fnd_sel[3];
     1d2:	2b 81       	ldd	r18, Y+3	; 0x03
     1d4:	20 83       	st	Z, r18
    PORTC = ~fnd_data[minute % 10];
     1d6:	fc 01       	movw	r30, r24
     1d8:	ea 5f       	subi	r30, 0xFA	; 250
     1da:	fe 4f       	sbci	r31, 0xFE	; 254
     1dc:	80 81       	ld	r24, Z
     1de:	80 95       	com	r24
     1e0:	85 bb       	out	0x15, r24	; 21
     1e2:	8f e9       	ldi	r24, 0x9F	; 159
     1e4:	9f e0       	ldi	r25, 0x0F	; 15
     1e6:	01 97       	sbiw	r24, 0x01	; 1
     1e8:	f1 f7       	brne	.-4      	; 0x1e6 <fnd_control+0xa2>
     1ea:	00 c0       	rjmp	.+0      	; 0x1ec <fnd_control+0xa8>
     1ec:	00 00       	nop
   	 _delay_ms(1);
}
     1ee:	df 91       	pop	r29
     1f0:	cf 91       	pop	r28
     1f2:	1f 91       	pop	r17
     1f4:	0f 91       	pop	r16
     1f6:	ff 90       	pop	r15
     1f8:	ef 90       	pop	r14
     1fa:	08 95       	ret

000001fc <interrupt_init>:

// 인터럽트 초기화 함수
void interrupt_init(){ //인터럽트 0 ,4~7
	tx0_str("[3. interrupt_init]\r\n");
     1fc:	84 e2       	ldi	r24, 0x24	; 36
     1fe:	91 e0       	ldi	r25, 0x01	; 1
     200:	6c df       	rcall	.-296    	; 0xda <tx0_str>
	EICRB = 0xaa;
     202:	8a ea       	ldi	r24, 0xAA	; 170
     204:	8a bf       	out	0x3a, r24	; 58
	EICRA = 0xff;
     206:	8f ef       	ldi	r24, 0xFF	; 255
     208:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
	EIMSK |= 0xf0|(1<<INT0);
     20c:	89 b7       	in	r24, 0x39	; 57
     20e:	81 6f       	ori	r24, 0xF1	; 241
     210:	89 bf       	out	0x39, r24	; 57
     212:	08 95       	ret

00000214 <__vector_1>:
}


// 인터럽트 동작 
ISR(INT0_vect){
     214:	1f 92       	push	r1
     216:	0f 92       	push	r0
     218:	0f b6       	in	r0, 0x3f	; 63
     21a:	0f 92       	push	r0
     21c:	11 24       	eor	r1, r1
     21e:	0b b6       	in	r0, 0x3b	; 59
     220:	0f 92       	push	r0
     222:	2f 93       	push	r18
     224:	3f 93       	push	r19
     226:	8f 93       	push	r24
     228:	9f 93       	push	r25
     22a:	ef 93       	push	r30
     22c:	ff 93       	push	r31
	set_systemtime = 1;	
     22e:	81 e0       	ldi	r24, 0x01	; 1
     230:	90 e0       	ldi	r25, 0x00	; 0
     232:	90 93 7b 04 	sts	0x047B, r25	; 0x80047b <set_systemtime+0x1>
     236:	80 93 7a 04 	sts	0x047A, r24	; 0x80047a <set_systemtime>
	
	switch(mode){
     23a:	80 91 7c 04 	lds	r24, 0x047C	; 0x80047c <mode>
     23e:	90 91 7d 04 	lds	r25, 0x047D	; 0x80047d <mode+0x1>
     242:	81 30       	cpi	r24, 0x01	; 1
     244:	91 05       	cpc	r25, r1
     246:	19 f0       	breq	.+6      	; 0x24e <__vector_1+0x3a>
     248:	02 97       	sbiw	r24, 0x02	; 2
     24a:	91 f0       	breq	.+36     	; 0x270 <__vector_1+0x5c>
     24c:	21 c0       	rjmp	.+66     	; 0x290 <__vector_1+0x7c>
		// 모드가 1일때 누르면 하강 시작
		case 1:
			if(temp_second[0]!=0){
     24e:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <temp_second>
     252:	90 91 77 04 	lds	r25, 0x0477	; 0x800477 <temp_second+0x1>
     256:	00 97       	sbiw	r24, 0x00	; 0
     258:	d9 f0       	breq	.+54     	; 0x290 <__vector_1+0x7c>
				isTimer_set = 1;
     25a:	21 e0       	ldi	r18, 0x01	; 1
     25c:	30 e0       	ldi	r19, 0x00	; 0
     25e:	30 93 6d 04 	sts	0x046D, r19	; 0x80046d <isTimer_set+0x1>
     262:	20 93 6c 04 	sts	0x046C, r18	; 0x80046c <isTimer_set>
				timer_second = temp_second[0];
     266:	90 93 6f 04 	sts	0x046F, r25	; 0x80046f <timer_second+0x1>
     26a:	80 93 6e 04 	sts	0x046E, r24	; 0x80046e <timer_second>
     26e:	10 c0       	rjmp	.+32     	; 0x290 <__vector_1+0x7c>
			}
			break;
		// 모드가 2일때 누르면 알람 설정
		case 2:
			if(temp_second[1]!=0){
     270:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <temp_second+0x2>
     274:	90 91 79 04 	lds	r25, 0x0479	; 0x800479 <temp_second+0x3>
     278:	00 97       	sbiw	r24, 0x00	; 0
     27a:	51 f0       	breq	.+20     	; 0x290 <__vector_1+0x7c>
				isAlarm_set = 1;
     27c:	21 e0       	ldi	r18, 0x01	; 1
     27e:	30 e0       	ldi	r19, 0x00	; 0
     280:	30 93 69 04 	sts	0x0469, r19	; 0x800469 <isAlarm_set+0x1>
     284:	20 93 68 04 	sts	0x0468, r18	; 0x800468 <isAlarm_set>
				alarm_second = temp_second[1];
     288:	90 93 6b 04 	sts	0x046B, r25	; 0x80046b <alarm_second+0x1>
     28c:	80 93 6a 04 	sts	0x046A, r24	; 0x80046a <alarm_second>
			}
			break;
	}
	if(TIMSK & (1<<TOIE0) != 0){
     290:	07 b6       	in	r0, 0x37	; 55
     292:	00 fe       	sbrs	r0, 0
     294:	11 c0       	rjmp	.+34     	; 0x2b8 <__vector_1+0xa4>
		TIMSK &= ~(1<<TOIE0);
     296:	87 b7       	in	r24, 0x37	; 55
     298:	8e 7f       	andi	r24, 0xFE	; 254
     29a:	87 bf       	out	0x37, r24	; 55
		isTimer_set = 0;
     29c:	10 92 6d 04 	sts	0x046D, r1	; 0x80046d <isTimer_set+0x1>
     2a0:	10 92 6c 04 	sts	0x046C, r1	; 0x80046c <isTimer_set>
		isAlarm_set = 0;
     2a4:	10 92 69 04 	sts	0x0469, r1	; 0x800469 <isAlarm_set+0x1>
     2a8:	10 92 68 04 	sts	0x0468, r1	; 0x800468 <isAlarm_set>
		temp_second[0] = 0;
     2ac:	e6 e7       	ldi	r30, 0x76	; 118
     2ae:	f4 e0       	ldi	r31, 0x04	; 4
     2b0:	11 82       	std	Z+1, r1	; 0x01
     2b2:	10 82       	st	Z, r1
		temp_second[1] = 0;
     2b4:	13 82       	std	Z+3, r1	; 0x03
     2b6:	12 82       	std	Z+2, r1	; 0x02
	}
}
     2b8:	ff 91       	pop	r31
     2ba:	ef 91       	pop	r30
     2bc:	9f 91       	pop	r25
     2be:	8f 91       	pop	r24
     2c0:	3f 91       	pop	r19
     2c2:	2f 91       	pop	r18
     2c4:	0f 90       	pop	r0
     2c6:	0b be       	out	0x3b, r0	; 59
     2c8:	0f 90       	pop	r0
     2ca:	0f be       	out	0x3f, r0	; 63
     2cc:	0f 90       	pop	r0
     2ce:	1f 90       	pop	r1
     2d0:	18 95       	reti

000002d2 <__vector_5>:
ISR(INT4_vect){	
     2d2:	1f 92       	push	r1
     2d4:	0f 92       	push	r0
     2d6:	0f b6       	in	r0, 0x3f	; 63
     2d8:	0f 92       	push	r0
     2da:	11 24       	eor	r1, r1
     2dc:	0b b6       	in	r0, 0x3b	; 59
     2de:	0f 92       	push	r0
     2e0:	2f 93       	push	r18
     2e2:	3f 93       	push	r19
     2e4:	4f 93       	push	r20
     2e6:	5f 93       	push	r21
     2e8:	6f 93       	push	r22
     2ea:	7f 93       	push	r23
     2ec:	8f 93       	push	r24
     2ee:	9f 93       	push	r25
     2f0:	af 93       	push	r26
     2f2:	bf 93       	push	r27
     2f4:	ef 93       	push	r30
     2f6:	ff 93       	push	r31
	switch(set_systemtime){
     2f8:	80 91 7a 04 	lds	r24, 0x047A	; 0x80047a <set_systemtime>
     2fc:	90 91 7b 04 	lds	r25, 0x047B	; 0x80047b <set_systemtime+0x1>
     300:	00 97       	sbiw	r24, 0x00	; 0
     302:	19 f0       	breq	.+6      	; 0x30a <__vector_5+0x38>
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	99 f0       	breq	.+38     	; 0x32e <__vector_5+0x5c>
     308:	16 c0       	rjmp	.+44     	; 0x336 <__vector_5+0x64>
		case 0:
			if(++hour_0 >= 24)	hour_0 = 24;
     30a:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <hour_0>
     30e:	90 91 75 04 	lds	r25, 0x0475	; 0x800475 <hour_0+0x1>
     312:	01 96       	adiw	r24, 0x01	; 1
     314:	90 93 75 04 	sts	0x0475, r25	; 0x800475 <hour_0+0x1>
     318:	80 93 74 04 	sts	0x0474, r24	; 0x800474 <hour_0>
     31c:	48 97       	sbiw	r24, 0x18	; 24
     31e:	5c f0       	brlt	.+22     	; 0x336 <__vector_5+0x64>
     320:	88 e1       	ldi	r24, 0x18	; 24
     322:	90 e0       	ldi	r25, 0x00	; 0
     324:	90 93 75 04 	sts	0x0475, r25	; 0x800475 <hour_0+0x1>
     328:	80 93 74 04 	sts	0x0474, r24	; 0x800474 <hour_0>
     32c:	04 c0       	rjmp	.+8      	; 0x336 <__vector_5+0x64>
			break;
		case 1:
			mode = 0; // 모드 0 설정
     32e:	10 92 7d 04 	sts	0x047D, r1	; 0x80047d <mode+0x1>
     332:	10 92 7c 04 	sts	0x047C, r1	; 0x80047c <mode>
			break;
	}
	
	// fnd 끄기
	fnd_clear();
     336:	f0 de       	rcall	.-544    	; 0x118 <fnd_clear>
}
     338:	ff 91       	pop	r31
     33a:	ef 91       	pop	r30
     33c:	bf 91       	pop	r27
     33e:	af 91       	pop	r26
     340:	9f 91       	pop	r25
     342:	8f 91       	pop	r24
     344:	7f 91       	pop	r23
     346:	6f 91       	pop	r22
     348:	5f 91       	pop	r21
     34a:	4f 91       	pop	r20
     34c:	3f 91       	pop	r19
     34e:	2f 91       	pop	r18
     350:	0f 90       	pop	r0
     352:	0b be       	out	0x3b, r0	; 59
     354:	0f 90       	pop	r0
     356:	0f be       	out	0x3f, r0	; 63
     358:	0f 90       	pop	r0
     35a:	1f 90       	pop	r1
     35c:	18 95       	reti

0000035e <__vector_6>:
ISR(INT5_vect){
     35e:	1f 92       	push	r1
     360:	0f 92       	push	r0
     362:	0f b6       	in	r0, 0x3f	; 63
     364:	0f 92       	push	r0
     366:	11 24       	eor	r1, r1
     368:	0b b6       	in	r0, 0x3b	; 59
     36a:	0f 92       	push	r0
     36c:	2f 93       	push	r18
     36e:	3f 93       	push	r19
     370:	4f 93       	push	r20
     372:	5f 93       	push	r21
     374:	6f 93       	push	r22
     376:	7f 93       	push	r23
     378:	8f 93       	push	r24
     37a:	9f 93       	push	r25
     37c:	af 93       	push	r26
     37e:	bf 93       	push	r27
     380:	ef 93       	push	r30
     382:	ff 93       	push	r31
	switch(set_systemtime){
     384:	80 91 7a 04 	lds	r24, 0x047A	; 0x80047a <set_systemtime>
     388:	90 91 7b 04 	lds	r25, 0x047B	; 0x80047b <set_systemtime+0x1>
     38c:	00 97       	sbiw	r24, 0x00	; 0
     38e:	19 f0       	breq	.+6      	; 0x396 <__vector_6+0x38>
     390:	01 97       	sbiw	r24, 0x01	; 1
     392:	91 f0       	breq	.+36     	; 0x3b8 <__vector_6+0x5a>
     394:	17 c0       	rjmp	.+46     	; 0x3c4 <__vector_6+0x66>
		case 0:
			if(--hour_0 <= 0)	hour_0 = 0;
     396:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <hour_0>
     39a:	90 91 75 04 	lds	r25, 0x0475	; 0x800475 <hour_0+0x1>
     39e:	01 97       	sbiw	r24, 0x01	; 1
     3a0:	90 93 75 04 	sts	0x0475, r25	; 0x800475 <hour_0+0x1>
     3a4:	80 93 74 04 	sts	0x0474, r24	; 0x800474 <hour_0>
     3a8:	18 16       	cp	r1, r24
     3aa:	19 06       	cpc	r1, r25
     3ac:	5c f0       	brlt	.+22     	; 0x3c4 <__vector_6+0x66>
     3ae:	10 92 75 04 	sts	0x0475, r1	; 0x800475 <hour_0+0x1>
     3b2:	10 92 74 04 	sts	0x0474, r1	; 0x800474 <hour_0>
     3b6:	06 c0       	rjmp	.+12     	; 0x3c4 <__vector_6+0x66>
			break;
		case 1:
			mode = 1; // 모드 1 설정
     3b8:	81 e0       	ldi	r24, 0x01	; 1
     3ba:	90 e0       	ldi	r25, 0x00	; 0
     3bc:	90 93 7d 04 	sts	0x047D, r25	; 0x80047d <mode+0x1>
     3c0:	80 93 7c 04 	sts	0x047C, r24	; 0x80047c <mode>
			break;
	}
	
	// fnd 끄기
	fnd_clear();
     3c4:	a9 de       	rcall	.-686    	; 0x118 <fnd_clear>
}
     3c6:	ff 91       	pop	r31
     3c8:	ef 91       	pop	r30
     3ca:	bf 91       	pop	r27
     3cc:	af 91       	pop	r26
     3ce:	9f 91       	pop	r25
     3d0:	8f 91       	pop	r24
     3d2:	7f 91       	pop	r23
     3d4:	6f 91       	pop	r22
     3d6:	5f 91       	pop	r21
     3d8:	4f 91       	pop	r20
     3da:	3f 91       	pop	r19
     3dc:	2f 91       	pop	r18
     3de:	0f 90       	pop	r0
     3e0:	0b be       	out	0x3b, r0	; 59
     3e2:	0f 90       	pop	r0
     3e4:	0f be       	out	0x3f, r0	; 63
     3e6:	0f 90       	pop	r0
     3e8:	1f 90       	pop	r1
     3ea:	18 95       	reti

000003ec <__vector_7>:
ISR(INT6_vect){
     3ec:	1f 92       	push	r1
     3ee:	0f 92       	push	r0
     3f0:	0f b6       	in	r0, 0x3f	; 63
     3f2:	0f 92       	push	r0
     3f4:	11 24       	eor	r1, r1
     3f6:	0b b6       	in	r0, 0x3b	; 59
     3f8:	0f 92       	push	r0
     3fa:	2f 93       	push	r18
     3fc:	3f 93       	push	r19
     3fe:	4f 93       	push	r20
     400:	5f 93       	push	r21
     402:	6f 93       	push	r22
     404:	7f 93       	push	r23
     406:	8f 93       	push	r24
     408:	9f 93       	push	r25
     40a:	af 93       	push	r26
     40c:	bf 93       	push	r27
     40e:	ef 93       	push	r30
     410:	ff 93       	push	r31
	switch(set_systemtime){
     412:	80 91 7a 04 	lds	r24, 0x047A	; 0x80047a <set_systemtime>
     416:	90 91 7b 04 	lds	r25, 0x047B	; 0x80047b <set_systemtime+0x1>
     41a:	00 97       	sbiw	r24, 0x00	; 0
     41c:	19 f0       	breq	.+6      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
     41e:	01 97       	sbiw	r24, 0x01	; 1
     420:	99 f0       	breq	.+38     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
     422:	18 c0       	rjmp	.+48     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
		case 0:
			if(++minute_0 >= 60)	minute_0 = 60;
     424:	80 91 72 04 	lds	r24, 0x0472	; 0x800472 <minute_0>
     428:	90 91 73 04 	lds	r25, 0x0473	; 0x800473 <minute_0+0x1>
     42c:	01 96       	adiw	r24, 0x01	; 1
     42e:	90 93 73 04 	sts	0x0473, r25	; 0x800473 <minute_0+0x1>
     432:	80 93 72 04 	sts	0x0472, r24	; 0x800472 <minute_0>
     436:	cc 97       	sbiw	r24, 0x3c	; 60
     438:	6c f0       	brlt	.+26     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
     43a:	8c e3       	ldi	r24, 0x3C	; 60
     43c:	90 e0       	ldi	r25, 0x00	; 0
     43e:	90 93 73 04 	sts	0x0473, r25	; 0x800473 <minute_0+0x1>
     442:	80 93 72 04 	sts	0x0472, r24	; 0x800472 <minute_0>
     446:	06 c0       	rjmp	.+12     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
			break;
		case 1:
			mode = 2; // 모드 2 설정
     448:	82 e0       	ldi	r24, 0x02	; 2
     44a:	90 e0       	ldi	r25, 0x00	; 0
     44c:	90 93 7d 04 	sts	0x047D, r25	; 0x80047d <mode+0x1>
     450:	80 93 7c 04 	sts	0x047C, r24	; 0x80047c <mode>
			break;
	}
	
	// fnd 끄기
	fnd_clear();
     454:	61 de       	rcall	.-830    	; 0x118 <fnd_clear>
}
     456:	ff 91       	pop	r31
     458:	ef 91       	pop	r30
     45a:	bf 91       	pop	r27
     45c:	af 91       	pop	r26
     45e:	9f 91       	pop	r25
     460:	8f 91       	pop	r24
     462:	7f 91       	pop	r23
     464:	6f 91       	pop	r22
     466:	5f 91       	pop	r21
     468:	4f 91       	pop	r20
     46a:	3f 91       	pop	r19
     46c:	2f 91       	pop	r18
     46e:	0f 90       	pop	r0
     470:	0b be       	out	0x3b, r0	; 59
     472:	0f 90       	pop	r0
     474:	0f be       	out	0x3f, r0	; 63
     476:	0f 90       	pop	r0
     478:	1f 90       	pop	r1
     47a:	18 95       	reti

0000047c <__vector_8>:
ISR(INT7_vect){
     47c:	1f 92       	push	r1
     47e:	0f 92       	push	r0
     480:	0f b6       	in	r0, 0x3f	; 63
     482:	0f 92       	push	r0
     484:	11 24       	eor	r1, r1
     486:	8f 93       	push	r24
     488:	9f 93       	push	r25
	switch(set_systemtime){
     48a:	80 91 7a 04 	lds	r24, 0x047A	; 0x80047a <set_systemtime>
     48e:	90 91 7b 04 	lds	r25, 0x047B	; 0x80047b <set_systemtime+0x1>
     492:	00 97       	sbiw	r24, 0x00	; 0
     494:	19 f0       	breq	.+6      	; 0x49c <__vector_8+0x20>
     496:	01 97       	sbiw	r24, 0x01	; 1
     498:	89 f0       	breq	.+34     	; 0x4bc <__vector_8+0x40>
     49a:	16 c0       	rjmp	.+44     	; 0x4c8 <__vector_8+0x4c>
		case 0:
			if(--minute_0 <= 0) minute_0 = 0;
     49c:	80 91 72 04 	lds	r24, 0x0472	; 0x800472 <minute_0>
     4a0:	90 91 73 04 	lds	r25, 0x0473	; 0x800473 <minute_0+0x1>
     4a4:	01 97       	sbiw	r24, 0x01	; 1
     4a6:	90 93 73 04 	sts	0x0473, r25	; 0x800473 <minute_0+0x1>
     4aa:	80 93 72 04 	sts	0x0472, r24	; 0x800472 <minute_0>
     4ae:	18 16       	cp	r1, r24
     4b0:	19 06       	cpc	r1, r25
     4b2:	24 f0       	brlt	.+8      	; 0x4bc <__vector_8+0x40>
     4b4:	10 92 73 04 	sts	0x0473, r1	; 0x800473 <minute_0+0x1>
     4b8:	10 92 72 04 	sts	0x0472, r1	; 0x800472 <minute_0>
		case 1:
			mode = 3; // 모드 3 설정
     4bc:	83 e0       	ldi	r24, 0x03	; 3
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	90 93 7d 04 	sts	0x047D, r25	; 0x80047d <mode+0x1>
     4c4:	80 93 7c 04 	sts	0x047C, r24	; 0x80047c <mode>
			break;
	}
}
     4c8:	9f 91       	pop	r25
     4ca:	8f 91       	pop	r24
     4cc:	0f 90       	pop	r0
     4ce:	0f be       	out	0x3f, r0	; 63
     4d0:	0f 90       	pop	r0
     4d2:	1f 90       	pop	r1
     4d4:	18 95       	reti

000004d6 <timer0_Nomalmode_init>:

// 타이머0 초기화 함수
void timer0_Nomalmode_init(){
	tx0_str("[4.timer0_Nomalmode_init]\r\n");
     4d6:	8a e3       	ldi	r24, 0x3A	; 58
     4d8:	91 e0       	ldi	r25, 0x01	; 1
     4da:	ff dd       	rcall	.-1026   	; 0xda <tx0_str>
	TCCR0 = (1<<1)|(1<<0);
     4dc:	83 e0       	ldi	r24, 0x03	; 3
     4de:	83 bf       	out	0x33, r24	; 51
	TIMSK &= ~(1<<TOIE0);
     4e0:	87 b7       	in	r24, 0x37	; 55
     4e2:	8e 7f       	andi	r24, 0xFE	; 254
     4e4:	87 bf       	out	0x37, r24	; 55
     4e6:	08 95       	ret

000004e8 <__vector_16>:
}
// 타이머0 인터럽트 서비스 루틴  
ISR(TIMER0_OVF_vect){
     4e8:	1f 92       	push	r1
     4ea:	0f 92       	push	r0
     4ec:	0f b6       	in	r0, 0x3f	; 63
     4ee:	0f 92       	push	r0
     4f0:	11 24       	eor	r1, r1
     4f2:	8f 93       	push	r24
     4f4:	9f 93       	push	r25
	PORTB^=1<<4;
     4f6:	98 b3       	in	r25, 0x18	; 24
     4f8:	80 e1       	ldi	r24, 0x10	; 16
     4fa:	89 27       	eor	r24, r25
     4fc:	88 bb       	out	0x18, r24	; 24
	TCNT0=17;
     4fe:	81 e1       	ldi	r24, 0x11	; 17
     500:	82 bf       	out	0x32, r24	; 50
}
     502:	9f 91       	pop	r25
     504:	8f 91       	pop	r24
     506:	0f 90       	pop	r0
     508:	0f be       	out	0x3f, r0	; 63
     50a:	0f 90       	pop	r0
     50c:	1f 90       	pop	r1
     50e:	18 95       	reti

00000510 <timer3_Nomalmode_init>:

//타이머3 초기화 함수
void timer3_Nomalmode_init() {
	tx0_str("[5.timer3_Nomalmode_init]\r\n");
     510:	86 e5       	ldi	r24, 0x56	; 86
     512:	91 e0       	ldi	r25, 0x01	; 1
     514:	e2 dd       	rcall	.-1084   	; 0xda <tx0_str>
	TCCR3A = 0; // 일반 모드 설정
     516:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
	TCCR3B = (1 << WGM32) | (1 << CS32) | (1 << CS30); // CTC 모드, 프리스케일러 설정
     51a:	8d e0       	ldi	r24, 0x0D	; 13
     51c:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
	TCNT3 = 0;
     520:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     524:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
	OCR3A = 15624; // 1초마다 비교
     528:	88 e0       	ldi	r24, 0x08	; 8
     52a:	9d e3       	ldi	r25, 0x3D	; 61
     52c:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
     530:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	ETIMSK |= (1 << OCIE3A); // 비교 매치 인터럽트 허용
     534:	ed e7       	ldi	r30, 0x7D	; 125
     536:	f0 e0       	ldi	r31, 0x00	; 0
     538:	80 81       	ld	r24, Z
     53a:	80 61       	ori	r24, 0x10	; 16
     53c:	80 83       	st	Z, r24
     53e:	08 95       	ret

00000540 <__vector_26>:
}
// 타이머3 인터럽트 서비스 루틴
ISR(TIMER3_COMPA_vect){
     540:	1f 92       	push	r1
     542:	0f 92       	push	r0
     544:	0f b6       	in	r0, 0x3f	; 63
     546:	0f 92       	push	r0
     548:	11 24       	eor	r1, r1
     54a:	0b b6       	in	r0, 0x3b	; 59
     54c:	0f 92       	push	r0
     54e:	2f 93       	push	r18
     550:	3f 93       	push	r19
     552:	4f 93       	push	r20
     554:	5f 93       	push	r21
     556:	6f 93       	push	r22
     558:	7f 93       	push	r23
     55a:	8f 93       	push	r24
     55c:	9f 93       	push	r25
     55e:	af 93       	push	r26
     560:	bf 93       	push	r27
     562:	ef 93       	push	r30
     564:	ff 93       	push	r31
	static int repeat3A = 0;
	repeat3A++;
     566:	80 91 66 04 	lds	r24, 0x0466	; 0x800466 <__data_end>
     56a:	90 91 67 04 	lds	r25, 0x0467	; 0x800467 <__data_end+0x1>
     56e:	01 96       	adiw	r24, 0x01	; 1
     570:	90 93 67 04 	sts	0x0467, r25	; 0x800467 <__data_end+0x1>
     574:	80 93 66 04 	sts	0x0466, r24	; 0x800466 <__data_end>
	if(repeat3A >= 60){
     578:	cc 97       	sbiw	r24, 0x3c	; 60
     57a:	44 f1       	brlt	.+80     	; 0x5cc <__vector_26+0x8c>
		system_second++;
     57c:	80 91 70 04 	lds	r24, 0x0470	; 0x800470 <system_second>
     580:	90 91 71 04 	lds	r25, 0x0471	; 0x800471 <system_second+0x1>
     584:	01 96       	adiw	r24, 0x01	; 1
     586:	90 93 71 04 	sts	0x0471, r25	; 0x800471 <system_second+0x1>
     58a:	80 93 70 04 	sts	0x0470, r24	; 0x800470 <system_second>
		repeat3A = 0;
     58e:	10 92 67 04 	sts	0x0467, r1	; 0x800467 <__data_end+0x1>
     592:	10 92 66 04 	sts	0x0466, r1	; 0x800466 <__data_end>
		
		sprintf(str1,"Current Time : %02d:%02d\r",system_second/60,system_second%60);
     596:	6c e3       	ldi	r22, 0x3C	; 60
     598:	70 e0       	ldi	r23, 0x00	; 0
     59a:	d7 d2       	rcall	.+1454   	; 0xb4a <__divmodhi4>
     59c:	9f 93       	push	r25
     59e:	8f 93       	push	r24
     5a0:	7f 93       	push	r23
     5a2:	6f 93       	push	r22
     5a4:	82 e7       	ldi	r24, 0x72	; 114
     5a6:	91 e0       	ldi	r25, 0x01	; 1
     5a8:	9f 93       	push	r25
     5aa:	8f 93       	push	r24
     5ac:	8e e7       	ldi	r24, 0x7E	; 126
     5ae:	94 e0       	ldi	r25, 0x04	; 4
     5b0:	9f 93       	push	r25
     5b2:	8f 93       	push	r24
     5b4:	f1 d2       	rcall	.+1506   	; 0xb98 <sprintf>
		tx0_str(str1);
     5b6:	8e e7       	ldi	r24, 0x7E	; 126
     5b8:	94 e0       	ldi	r25, 0x04	; 4
     5ba:	8f dd       	rcall	.-1250   	; 0xda <tx0_str>
     5bc:	8d b7       	in	r24, 0x3d	; 61
     5be:	9e b7       	in	r25, 0x3e	; 62
     5c0:	08 96       	adiw	r24, 0x08	; 8
     5c2:	0f b6       	in	r0, 0x3f	; 63
     5c4:	f8 94       	cli
     5c6:	9e bf       	out	0x3e, r25	; 62
     5c8:	0f be       	out	0x3f, r0	; 63
     5ca:	8d bf       	out	0x3d, r24	; 61
	}
	
	// 타이머 설정 완료시 하강 시작
	if(isTimer_set == 1){
     5cc:	80 91 6c 04 	lds	r24, 0x046C	; 0x80046c <isTimer_set>
     5d0:	90 91 6d 04 	lds	r25, 0x046D	; 0x80046d <isTimer_set+0x1>
     5d4:	01 97       	sbiw	r24, 0x01	; 1
     5d6:	b9 f4       	brne	.+46     	; 0x606 <__vector_26+0xc6>
		// 타이머 완료
		if(--timer_second <= 0){
     5d8:	80 91 6e 04 	lds	r24, 0x046E	; 0x80046e <timer_second>
     5dc:	90 91 6f 04 	lds	r25, 0x046F	; 0x80046f <timer_second+0x1>
     5e0:	01 97       	sbiw	r24, 0x01	; 1
     5e2:	90 93 6f 04 	sts	0x046F, r25	; 0x80046f <timer_second+0x1>
     5e6:	80 93 6e 04 	sts	0x046E, r24	; 0x80046e <timer_second>
     5ea:	18 16       	cp	r1, r24
     5ec:	19 06       	cpc	r1, r25
     5ee:	5c f0       	brlt	.+22     	; 0x606 <__vector_26+0xc6>
			TIMSK |= (1<<TOIE0);
     5f0:	87 b7       	in	r24, 0x37	; 55
     5f2:	81 60       	ori	r24, 0x01	; 1
     5f4:	87 bf       	out	0x37, r24	; 55
			timer_second = 0;
     5f6:	10 92 6f 04 	sts	0x046F, r1	; 0x80046f <timer_second+0x1>
     5fa:	10 92 6e 04 	sts	0x046E, r1	; 0x80046e <timer_second>
			temp_second[0] = 0;
     5fe:	10 92 77 04 	sts	0x0477, r1	; 0x800477 <temp_second+0x1>
     602:	10 92 76 04 	sts	0x0476, r1	; 0x800476 <temp_second>
		}
	}
}
     606:	ff 91       	pop	r31
     608:	ef 91       	pop	r30
     60a:	bf 91       	pop	r27
     60c:	af 91       	pop	r26
     60e:	9f 91       	pop	r25
     610:	8f 91       	pop	r24
     612:	7f 91       	pop	r23
     614:	6f 91       	pop	r22
     616:	5f 91       	pop	r21
     618:	4f 91       	pop	r20
     61a:	3f 91       	pop	r19
     61c:	2f 91       	pop	r18
     61e:	0f 90       	pop	r0
     620:	0b be       	out	0x3b, r0	; 59
     622:	0f 90       	pop	r0
     624:	0f be       	out	0x3f, r0	; 63
     626:	0f 90       	pop	r0
     628:	1f 90       	pop	r1
     62a:	18 95       	reti

0000062c <adc_init>:

// adc값 초기화 함수
void adc_init(){
	tx0_str("[6.adc_init]\r\n");
     62c:	8c e8       	ldi	r24, 0x8C	; 140
     62e:	91 e0       	ldi	r25, 0x01	; 1
     630:	54 dd       	rcall	.-1368   	; 0xda <tx0_str>
	DDRF &= ~(1<<0);
     632:	e1 e6       	ldi	r30, 0x61	; 97
     634:	f0 e0       	ldi	r31, 0x00	; 0
     636:	80 81       	ld	r24, Z
     638:	8e 7f       	andi	r24, 0xFE	; 254
     63a:	80 83       	st	Z, r24
	ADMUX = 0;
     63c:	17 b8       	out	0x07, r1	; 7
	ADCSRA = (1<<ADEN) | (7<<ADPS0);
     63e:	87 e8       	ldi	r24, 0x87	; 135
     640:	86 b9       	out	0x06, r24	; 6
     642:	08 95       	ret

00000644 <read_adc>:
}
// adc값 읽어오는 함수
unsigned short read_adc() {
	ADCSRA |= (1<<ADSC);
     644:	86 b1       	in	r24, 0x06	; 6
     646:	80 64       	ori	r24, 0x40	; 64
     648:	86 b9       	out	0x06, r24	; 6
	while((ADCSRA & (1<<ADIF)) != (1<<ADIF));
     64a:	34 9b       	sbis	0x06, 4	; 6
     64c:	fe cf       	rjmp	.-4      	; 0x64a <read_adc+0x6>
	unsigned char adc_low = ADCL;
     64e:	24 b1       	in	r18, 0x04	; 4
	unsigned char adc_high = ADCH;
     650:	85 b1       	in	r24, 0x05	; 5
	
	if(ADMUX == 0)	ADMUX = 1;
     652:	97 b1       	in	r25, 0x07	; 7
     654:	91 11       	cpse	r25, r1
     656:	03 c0       	rjmp	.+6      	; 0x65e <read_adc+0x1a>
     658:	91 e0       	ldi	r25, 0x01	; 1
     65a:	97 b9       	out	0x07, r25	; 7
     65c:	04 c0       	rjmp	.+8      	; 0x666 <read_adc+0x22>
	else if(ADMUX == 1)	ADMUX = 0;
     65e:	97 b1       	in	r25, 0x07	; 7
     660:	91 30       	cpi	r25, 0x01	; 1
     662:	09 f4       	brne	.+2      	; 0x666 <read_adc+0x22>
     664:	17 b8       	out	0x07, r1	; 7
	
	return((unsigned short)adc_high << 8) | (unsigned short)adc_low;
     666:	90 e0       	ldi	r25, 0x00	; 0
     668:	98 2f       	mov	r25, r24
     66a:	88 27       	eor	r24, r24
}
     66c:	82 2b       	or	r24, r18
     66e:	08 95       	ret

00000670 <menu>:

//* [설명서 알려주는 함수] *//
void menu(){
	tx0_str("\r\n");
     670:	88 ec       	ldi	r24, 0xC8	; 200
     672:	91 e0       	ldi	r25, 0x01	; 1
     674:	32 dd       	rcall	.-1436   	; 0xda <tx0_str>
	tx0_str("#************* [ INSTRUCTIONS ] ************#\r\n");
     676:	8b e9       	ldi	r24, 0x9B	; 155
     678:	91 e0       	ldi	r25, 0x01	; 1
     67a:	2f dd       	rcall	.-1442   	; 0xda <tx0_str>
	tx0_str("#\r\n");
     67c:	87 ec       	ldi	r24, 0xC7	; 199
     67e:	91 e0       	ldi	r25, 0x01	; 1
     680:	2c dd       	rcall	.-1448   	; 0xda <tx0_str>
	tx0_str("# 1. Press 's' to start the program.\r\n");
     682:	8b ec       	ldi	r24, 0xCB	; 203
     684:	91 e0       	ldi	r25, 0x01	; 1
     686:	29 dd       	rcall	.-1454   	; 0xda <tx0_str>
	tx0_str("# 2. Use the switch to input the current time.\r\n");
     688:	82 ef       	ldi	r24, 0xF2	; 242
     68a:	91 e0       	ldi	r25, 0x01	; 1
     68c:	26 dd       	rcall	.-1460   	; 0xda <tx0_str>
	tx0_str("# 3. Set the mode using the switch.\r\n");
     68e:	83 e2       	ldi	r24, 0x23	; 35
     690:	92 e0       	ldi	r25, 0x02	; 2
     692:	23 dd       	rcall	.-1466   	; 0xda <tx0_str>
	tx0_str("#  {sw1: Set/Turn off Timer/Alarm}\r\n");
     694:	89 e4       	ldi	r24, 0x49	; 73
     696:	92 e0       	ldi	r25, 0x02	; 2
     698:	20 dd       	rcall	.-1472   	; 0xda <tx0_str>
	tx0_str("#  {sw2: mode1   sw3: mode2   sw4: mode3}\r\n");
     69a:	8e e6       	ldi	r24, 0x6E	; 110
     69c:	92 e0       	ldi	r25, 0x02	; 2
     69e:	1d dd       	rcall	.-1478   	; 0xda <tx0_str>
	tx0_str("# mode1: Displays the current time\r\n");
     6a0:	8a e9       	ldi	r24, 0x9A	; 154
     6a2:	92 e0       	ldi	r25, 0x02	; 2
     6a4:	1a dd       	rcall	.-1484   	; 0xda <tx0_str>
	tx0_str("# mode2: Sets the timer\r\n");
     6a6:	8f eb       	ldi	r24, 0xBF	; 191
     6a8:	92 e0       	ldi	r25, 0x02	; 2
     6aa:	17 dd       	rcall	.-1490   	; 0xda <tx0_str>
	tx0_str("# mode3: Sets the alarm\r\n");
     6ac:	89 ed       	ldi	r24, 0xD9	; 217
     6ae:	92 e0       	ldi	r25, 0x02	; 2
     6b0:	14 dd       	rcall	.-1496   	; 0xda <tx0_str>
	tx0_str("# 4. Use the joystick to set the time for the\r\n");
     6b2:	83 ef       	ldi	r24, 0xF3	; 243
     6b4:	92 e0       	ldi	r25, 0x02	; 2
     6b6:	11 dd       	rcall	.-1502   	; 0xda <tx0_str>
	tx0_str("#    Timer/Alarm and press switch 1 to confirm.\r\n");
     6b8:	83 e2       	ldi	r24, 0x23	; 35
     6ba:	93 e0       	ldi	r25, 0x03	; 3
     6bc:	0e dd       	rcall	.-1508   	; 0xda <tx0_str>
	tx0_str("# 5. When the buzzer sounds, press switch 1 to turn it off.\r\n");
     6be:	85 e5       	ldi	r24, 0x55	; 85
     6c0:	93 e0       	ldi	r25, 0x03	; 3
     6c2:	0b dd       	rcall	.-1514   	; 0xda <tx0_str>
	tx0_str("#\r\n");
     6c4:	87 ec       	ldi	r24, 0xC7	; 199
     6c6:	91 e0       	ldi	r25, 0x01	; 1
     6c8:	08 dd       	rcall	.-1520   	; 0xda <tx0_str>
	tx0_str("# Note: If you turn off the buzzer by pressing switch 1,\r\n");
     6ca:	83 e9       	ldi	r24, 0x93	; 147
     6cc:	93 e0       	ldi	r25, 0x03	; 3
     6ce:	05 dd       	rcall	.-1526   	; 0xda <tx0_str>
     6d0:	8e ec       	ldi	r24, 0xCE	; 206
	tx0_str("#       both the timer and alarm settings will be turned off.\r\n");
     6d2:	93 e0       	ldi	r25, 0x03	; 3
     6d4:	02 dd       	rcall	.-1532   	; 0xda <tx0_str>
     6d6:	87 ec       	ldi	r24, 0xC7	; 199
     6d8:	91 e0       	ldi	r25, 0x01	; 1
	tx0_str("#\r\n");
     6da:	ff dc       	rcall	.-1538   	; 0xda <tx0_str>
     6dc:	87 ec       	ldi	r24, 0xC7	; 199
     6de:	91 e0       	ldi	r25, 0x01	; 1
     6e0:	fc dc       	rcall	.-1544   	; 0xda <tx0_str>
	tx0_str("#\r\n");
     6e2:	8e e0       	ldi	r24, 0x0E	; 14
     6e4:	94 e0       	ldi	r25, 0x04	; 4
     6e6:	f9 cc       	rjmp	.-1550   	; 0xda <tx0_str>
     6e8:	08 95       	ret

000006ea <Time_set>:
	tx0_str("# Press 's' to start\r\n");
     6ea:	85 36       	cpi	r24, 0x65	; 101
     6ec:	91 05       	cpc	r25, r1
     6ee:	1c f5       	brge	.+70     	; 0x736 <Time_set+0x4c>
     6f0:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <tempX>
}

//mode1,2번에 있을 타임머 셋
void Time_set(int X, int Y,int mode){
	// 조이스틱의 위치에 따라 시간의 자리수 선택 변경
	if (X <= 100 && --tempX <= 0) {
     6f4:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <tempX+0x1>
     6f8:	21 50       	subi	r18, 0x01	; 1
     6fa:	31 09       	sbc	r19, r1
     6fc:	30 93 03 01 	sts	0x0103, r19	; 0x800103 <tempX+0x1>
     700:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <tempX>
     704:	12 16       	cp	r1, r18
     706:	13 06       	cpc	r1, r19
     708:	b4 f0       	brlt	.+44     	; 0x736 <Time_set+0x4c>
		place = (place < 4) ? place + 1 : 4;
     70a:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <place>
     70e:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <place+0x1>
     712:	24 30       	cpi	r18, 0x04	; 4
     714:	31 05       	cpc	r19, r1
     716:	1c f4       	brge	.+6      	; 0x71e <Time_set+0x34>
     718:	2f 5f       	subi	r18, 0xFF	; 255
     71a:	3f 4f       	sbci	r19, 0xFF	; 255
     71c:	02 c0       	rjmp	.+4      	; 0x722 <Time_set+0x38>
     71e:	24 e0       	ldi	r18, 0x04	; 4
     720:	30 e0       	ldi	r19, 0x00	; 0
     722:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <place+0x1>
     726:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <place>
		tempX = 50;
     72a:	22 e3       	ldi	r18, 0x32	; 50
     72c:	30 e0       	ldi	r19, 0x00	; 0
     72e:	30 93 03 01 	sts	0x0103, r19	; 0x800103 <tempX+0x1>
     732:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <tempX>
	}
	if (X >= 900 && --tempX <= 0) {
     736:	84 38       	cpi	r24, 0x84	; 132
     738:	93 40       	sbci	r25, 0x03	; 3
     73a:	0c f1       	brlt	.+66     	; 0x77e <Time_set+0x94>
     73c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <tempX>
     740:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <tempX+0x1>
     744:	01 97       	sbiw	r24, 0x01	; 1
     746:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <tempX+0x1>
     74a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <tempX>
     74e:	18 16       	cp	r1, r24
     750:	19 06       	cpc	r1, r25
     752:	ac f0       	brlt	.+42     	; 0x77e <Time_set+0x94>
		place = (place > 1) ? place - 1 : 1;
     754:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <place>
     758:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <place+0x1>
     75c:	82 30       	cpi	r24, 0x02	; 2
     75e:	91 05       	cpc	r25, r1
     760:	14 f0       	brlt	.+4      	; 0x766 <Time_set+0x7c>
     762:	01 97       	sbiw	r24, 0x01	; 1
     764:	02 c0       	rjmp	.+4      	; 0x76a <Time_set+0x80>
     766:	81 e0       	ldi	r24, 0x01	; 1
     768:	90 e0       	ldi	r25, 0x00	; 0
     76a:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <place+0x1>
     76e:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <place>
		tempX = 50;
     772:	82 e3       	ldi	r24, 0x32	; 50
     774:	90 e0       	ldi	r25, 0x00	; 0
     776:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <tempX+0x1>
     77a:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <tempX>
	}
	
	if(--tempY <= 0){
     77e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     782:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     786:	01 97       	sbiw	r24, 0x01	; 1
     788:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     78c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     790:	18 16       	cp	r1, r24
     792:	19 06       	cpc	r1, r25
     794:	0c f4       	brge	.+2      	; 0x798 <Time_set+0xae>
     796:	ac c0       	rjmp	.+344    	; 0x8f0 <Time_set+0x206>
		// 조이스틱의 위치에 따라 시간설정하는 시간을 바꾸기
		switch(place) {
     798:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <place>
     79c:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <place+0x1>
     7a0:	82 30       	cpi	r24, 0x02	; 2
     7a2:	91 05       	cpc	r25, r1
     7a4:	59 f1       	breq	.+86     	; 0x7fc <Time_set+0x112>
     7a6:	1c f4       	brge	.+6      	; 0x7ae <Time_set+0xc4>
     7a8:	01 97       	sbiw	r24, 0x01	; 1
     7aa:	49 f0       	breq	.+18     	; 0x7be <Time_set+0xd4>
     7ac:	9b c0       	rjmp	.+310    	; 0x8e4 <Time_set+0x1fa>
     7ae:	83 30       	cpi	r24, 0x03	; 3
     7b0:	91 05       	cpc	r25, r1
     7b2:	09 f4       	brne	.+2      	; 0x7b6 <Time_set+0xcc>
     7b4:	4a c0       	rjmp	.+148    	; 0x84a <Time_set+0x160>
     7b6:	04 97       	sbiw	r24, 0x04	; 4
     7b8:	09 f4       	brne	.+2      	; 0x7bc <Time_set+0xd2>
     7ba:	6e c0       	rjmp	.+220    	; 0x898 <Time_set+0x1ae>
     7bc:	93 c0       	rjmp	.+294    	; 0x8e4 <Time_set+0x1fa>
			case 1:
				temp_second[mode-1] += (Y >= 922 ? 1 : 0) - (Y <= 200 ? 1 : 0);
     7be:	fa 01       	movw	r30, r20
     7c0:	31 97       	sbiw	r30, 0x01	; 1
     7c2:	31 e0       	ldi	r19, 0x01	; 1
     7c4:	20 e0       	ldi	r18, 0x00	; 0
     7c6:	6a 39       	cpi	r22, 0x9A	; 154
     7c8:	83 e0       	ldi	r24, 0x03	; 3
     7ca:	78 07       	cpc	r23, r24
     7cc:	0c f4       	brge	.+2      	; 0x7d0 <Time_set+0xe6>
     7ce:	30 e0       	ldi	r19, 0x00	; 0
     7d0:	83 2f       	mov	r24, r19
     7d2:	92 2f       	mov	r25, r18
     7d4:	21 e0       	ldi	r18, 0x01	; 1
     7d6:	30 e0       	ldi	r19, 0x00	; 0
     7d8:	69 3c       	cpi	r22, 0xC9	; 201
     7da:	71 05       	cpc	r23, r1
     7dc:	14 f0       	brlt	.+4      	; 0x7e2 <Time_set+0xf8>
     7de:	20 e0       	ldi	r18, 0x00	; 0
     7e0:	30 e0       	ldi	r19, 0x00	; 0
     7e2:	82 1b       	sub	r24, r18
     7e4:	93 0b       	sbc	r25, r19
     7e6:	ee 0f       	add	r30, r30
     7e8:	ff 1f       	adc	r31, r31
     7ea:	ea 58       	subi	r30, 0x8A	; 138
     7ec:	fb 4f       	sbci	r31, 0xFB	; 251
     7ee:	20 81       	ld	r18, Z
     7f0:	31 81       	ldd	r19, Z+1	; 0x01
     7f2:	82 0f       	add	r24, r18
     7f4:	93 1f       	adc	r25, r19
     7f6:	91 83       	std	Z+1, r25	; 0x01
     7f8:	80 83       	st	Z, r24
				break;
     7fa:	74 c0       	rjmp	.+232    	; 0x8e4 <Time_set+0x1fa>
			case 2:
				temp_second[mode-1] += (Y >= 922 ? 10 : 0) - (Y <= 100 ? 10 : 0);
     7fc:	ca 01       	movw	r24, r20
     7fe:	01 97       	sbiw	r24, 0x01	; 1
     800:	fc 01       	movw	r30, r24
     802:	ee 0f       	add	r30, r30
     804:	ff 1f       	adc	r31, r31
     806:	ea 58       	subi	r30, 0x8A	; 138
     808:	fb 4f       	sbci	r31, 0xFB	; 251
     80a:	a0 81       	ld	r26, Z
     80c:	b1 81       	ldd	r27, Z+1	; 0x01
     80e:	6a 39       	cpi	r22, 0x9A	; 154
     810:	23 e0       	ldi	r18, 0x03	; 3
     812:	72 07       	cpc	r23, r18
     814:	1c f0       	brlt	.+6      	; 0x81c <Time_set+0x132>
     816:	2a e0       	ldi	r18, 0x0A	; 10
     818:	30 e0       	ldi	r19, 0x00	; 0
     81a:	02 c0       	rjmp	.+4      	; 0x820 <Time_set+0x136>
     81c:	20 e0       	ldi	r18, 0x00	; 0
     81e:	30 e0       	ldi	r19, 0x00	; 0
     820:	65 36       	cpi	r22, 0x65	; 101
     822:	71 05       	cpc	r23, r1
     824:	1c f4       	brge	.+6      	; 0x82c <Time_set+0x142>
     826:	6a e0       	ldi	r22, 0x0A	; 10
     828:	70 e0       	ldi	r23, 0x00	; 0
     82a:	02 c0       	rjmp	.+4      	; 0x830 <Time_set+0x146>
     82c:	60 e0       	ldi	r22, 0x00	; 0
     82e:	70 e0       	ldi	r23, 0x00	; 0
     830:	26 1b       	sub	r18, r22
     832:	37 0b       	sbc	r19, r23
     834:	88 0f       	add	r24, r24
     836:	99 1f       	adc	r25, r25
     838:	fc 01       	movw	r30, r24
     83a:	ea 58       	subi	r30, 0x8A	; 138
     83c:	fb 4f       	sbci	r31, 0xFB	; 251
     83e:	cd 01       	movw	r24, r26
     840:	82 0f       	add	r24, r18
     842:	93 1f       	adc	r25, r19
     844:	91 83       	std	Z+1, r25	; 0x01
     846:	80 83       	st	Z, r24
				break;
     848:	4d c0       	rjmp	.+154    	; 0x8e4 <Time_set+0x1fa>
			case 3:
				temp_second[mode-1] += (Y >= 922 ? 60 : 0) - (Y <= 100 ? 60 : 0);
     84a:	ca 01       	movw	r24, r20
     84c:	01 97       	sbiw	r24, 0x01	; 1
     84e:	fc 01       	movw	r30, r24
     850:	ee 0f       	add	r30, r30
     852:	ff 1f       	adc	r31, r31
     854:	ea 58       	subi	r30, 0x8A	; 138
     856:	fb 4f       	sbci	r31, 0xFB	; 251
     858:	a0 81       	ld	r26, Z
     85a:	b1 81       	ldd	r27, Z+1	; 0x01
     85c:	6a 39       	cpi	r22, 0x9A	; 154
     85e:	23 e0       	ldi	r18, 0x03	; 3
     860:	72 07       	cpc	r23, r18
     862:	1c f0       	brlt	.+6      	; 0x86a <Time_set+0x180>
     864:	2c e3       	ldi	r18, 0x3C	; 60
     866:	30 e0       	ldi	r19, 0x00	; 0
     868:	02 c0       	rjmp	.+4      	; 0x86e <Time_set+0x184>
     86a:	20 e0       	ldi	r18, 0x00	; 0
     86c:	30 e0       	ldi	r19, 0x00	; 0
     86e:	65 36       	cpi	r22, 0x65	; 101
     870:	71 05       	cpc	r23, r1
     872:	1c f4       	brge	.+6      	; 0x87a <Time_set+0x190>
     874:	6c e3       	ldi	r22, 0x3C	; 60
     876:	70 e0       	ldi	r23, 0x00	; 0
     878:	02 c0       	rjmp	.+4      	; 0x87e <Time_set+0x194>
     87a:	60 e0       	ldi	r22, 0x00	; 0
     87c:	70 e0       	ldi	r23, 0x00	; 0
     87e:	26 1b       	sub	r18, r22
     880:	37 0b       	sbc	r19, r23
     882:	88 0f       	add	r24, r24
     884:	99 1f       	adc	r25, r25
     886:	fc 01       	movw	r30, r24
     888:	ea 58       	subi	r30, 0x8A	; 138
     88a:	fb 4f       	sbci	r31, 0xFB	; 251
     88c:	cd 01       	movw	r24, r26
     88e:	82 0f       	add	r24, r18
     890:	93 1f       	adc	r25, r19
     892:	91 83       	std	Z+1, r25	; 0x01
     894:	80 83       	st	Z, r24
				break;
     896:	26 c0       	rjmp	.+76     	; 0x8e4 <Time_set+0x1fa>
			case 4:
				temp_second[mode-1] += (Y >= 922 ? 600 : 0) - (Y <= 100 ? 600 : 0);
     898:	ca 01       	movw	r24, r20
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	fc 01       	movw	r30, r24
     89e:	ee 0f       	add	r30, r30
     8a0:	ff 1f       	adc	r31, r31
     8a2:	ea 58       	subi	r30, 0x8A	; 138
     8a4:	fb 4f       	sbci	r31, 0xFB	; 251
     8a6:	a0 81       	ld	r26, Z
     8a8:	b1 81       	ldd	r27, Z+1	; 0x01
     8aa:	6a 39       	cpi	r22, 0x9A	; 154
     8ac:	23 e0       	ldi	r18, 0x03	; 3
     8ae:	72 07       	cpc	r23, r18
     8b0:	1c f0       	brlt	.+6      	; 0x8b8 <Time_set+0x1ce>
     8b2:	28 e5       	ldi	r18, 0x58	; 88
     8b4:	32 e0       	ldi	r19, 0x02	; 2
     8b6:	02 c0       	rjmp	.+4      	; 0x8bc <Time_set+0x1d2>
     8b8:	20 e0       	ldi	r18, 0x00	; 0
     8ba:	30 e0       	ldi	r19, 0x00	; 0
     8bc:	65 36       	cpi	r22, 0x65	; 101
     8be:	71 05       	cpc	r23, r1
     8c0:	1c f4       	brge	.+6      	; 0x8c8 <Time_set+0x1de>
     8c2:	68 e5       	ldi	r22, 0x58	; 88
     8c4:	72 e0       	ldi	r23, 0x02	; 2
     8c6:	02 c0       	rjmp	.+4      	; 0x8cc <Time_set+0x1e2>
     8c8:	60 e0       	ldi	r22, 0x00	; 0
     8ca:	70 e0       	ldi	r23, 0x00	; 0
     8cc:	26 1b       	sub	r18, r22
     8ce:	37 0b       	sbc	r19, r23
     8d0:	88 0f       	add	r24, r24
     8d2:	99 1f       	adc	r25, r25
     8d4:	fc 01       	movw	r30, r24
     8d6:	ea 58       	subi	r30, 0x8A	; 138
     8d8:	fb 4f       	sbci	r31, 0xFB	; 251
     8da:	cd 01       	movw	r24, r26
     8dc:	82 0f       	add	r24, r18
     8de:	93 1f       	adc	r25, r19
     8e0:	91 83       	std	Z+1, r25	; 0x01
     8e2:	80 83       	st	Z, r24
				break;
			default:
			// 아무런 액션 없음
			break;
		}
		tempY = 30;
     8e4:	8e e1       	ldi	r24, 0x1E	; 30
     8e6:	90 e0       	ldi	r25, 0x00	; 0
     8e8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     8ec:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	}
	
	if(temp_second[mode-1] <= 0) {
     8f0:	ca 01       	movw	r24, r20
     8f2:	01 97       	sbiw	r24, 0x01	; 1
     8f4:	fc 01       	movw	r30, r24
     8f6:	ee 0f       	add	r30, r30
     8f8:	ff 1f       	adc	r31, r31
     8fa:	ea 58       	subi	r30, 0x8A	; 138
     8fc:	fb 4f       	sbci	r31, 0xFB	; 251
     8fe:	20 81       	ld	r18, Z
     900:	31 81       	ldd	r19, Z+1	; 0x01
     902:	12 16       	cp	r1, r18
     904:	13 06       	cpc	r1, r19
     906:	3c f0       	brlt	.+14     	; 0x916 <Time_set+0x22c>
		temp_second[mode-1] = 0;
     908:	fc 01       	movw	r30, r24
     90a:	ee 0f       	add	r30, r30
     90c:	ff 1f       	adc	r31, r31
     90e:	ea 58       	subi	r30, 0x8A	; 138
     910:	fb 4f       	sbci	r31, 0xFB	; 251
     912:	11 82       	std	Z+1, r1	; 0x01
     914:	10 82       	st	Z, r1
	}

	switch(mode){
     916:	41 30       	cpi	r20, 0x01	; 1
     918:	51 05       	cpc	r21, r1
     91a:	21 f0       	breq	.+8      	; 0x924 <Time_set+0x23a>
     91c:	42 30       	cpi	r20, 0x02	; 2
     91e:	51 05       	cpc	r21, r1
     920:	b1 f0       	breq	.+44     	; 0x94e <Time_set+0x264>
     922:	08 95       	ret
		case 1:
			// 60 * 99 + 59 = 5999
			temp_second[mode-1] = (temp_second[mode-1] >= 5999) ? 5999 : temp_second[mode-1];
     924:	fc 01       	movw	r30, r24
     926:	ee 0f       	add	r30, r30
     928:	ff 1f       	adc	r31, r31
     92a:	ea 58       	subi	r30, 0x8A	; 138
     92c:	fb 4f       	sbci	r31, 0xFB	; 251
     92e:	20 81       	ld	r18, Z
     930:	31 81       	ldd	r19, Z+1	; 0x01
     932:	20 37       	cpi	r18, 0x70	; 112
     934:	47 e1       	ldi	r20, 0x17	; 23
     936:	34 07       	cpc	r19, r20
     938:	14 f0       	brlt	.+4      	; 0x93e <Time_set+0x254>
     93a:	2f e6       	ldi	r18, 0x6F	; 111
     93c:	37 e1       	ldi	r19, 0x17	; 23
     93e:	88 0f       	add	r24, r24
     940:	99 1f       	adc	r25, r25
     942:	fc 01       	movw	r30, r24
     944:	ea 58       	subi	r30, 0x8A	; 138
     946:	fb 4f       	sbci	r31, 0xFB	; 251
     948:	31 83       	std	Z+1, r19	; 0x01
     94a:	20 83       	st	Z, r18
			break;
     94c:	08 95       	ret
		case 2:
			// 60 * 24 = 1440
			temp_second[mode-1] = (temp_second[mode-1] >= 1440) ? 1440 : temp_second[mode-1];
     94e:	fc 01       	movw	r30, r24
     950:	ee 0f       	add	r30, r30
     952:	ff 1f       	adc	r31, r31
     954:	ea 58       	subi	r30, 0x8A	; 138
     956:	fb 4f       	sbci	r31, 0xFB	; 251
     958:	20 81       	ld	r18, Z
     95a:	31 81       	ldd	r19, Z+1	; 0x01
     95c:	21 3a       	cpi	r18, 0xA1	; 161
     95e:	45 e0       	ldi	r20, 0x05	; 5
     960:	34 07       	cpc	r19, r20
     962:	14 f0       	brlt	.+4      	; 0x968 <Time_set+0x27e>
     964:	20 ea       	ldi	r18, 0xA0	; 160
     966:	35 e0       	ldi	r19, 0x05	; 5
     968:	88 0f       	add	r24, r24
     96a:	99 1f       	adc	r25, r25
     96c:	fc 01       	movw	r30, r24
     96e:	ea 58       	subi	r30, 0x8A	; 138
     970:	fb 4f       	sbci	r31, 0xFB	; 251
     972:	31 83       	std	Z+1, r19	; 0x01
     974:	20 83       	st	Z, r18
     976:	08 95       	ret

00000978 <main>:
	
	//* [지역 변수 설정] *//
	int joystick_x = 0;
	int joystick_y = 0;
	
	usart0_init(103); // 통신 코드 초기화
     978:	87 e6       	ldi	r24, 0x67	; 103
     97a:	90 e0       	ldi	r25, 0x00	; 0
     97c:	a6 db       	rcall	.-2228   	; 0xca <usart0_init>
	tx0_str("[1. usart0_init]\r\n");
     97e:	85 e2       	ldi	r24, 0x25	; 37
     980:	94 e0       	ldi	r25, 0x04	; 4
	port_init(); // 포트 초기화	
     982:	ab db       	rcall	.-2218   	; 0xda <tx0_str>
	interrupt_init(); // 인터럽트 초기화
     984:	ba db       	rcall	.-2188   	; 0xfa <port_init>
	timer0_Nomalmode_init(); // 터이머0 초기화
     986:	3a dc       	rcall	.-1932   	; 0x1fc <interrupt_init>
   	timer3_Nomalmode_init(); // 타이머3 초기화
     988:	a6 dd       	rcall	.-1204   	; 0x4d6 <timer0_Nomalmode_init>
     98a:	c2 dd       	rcall	.-1148   	; 0x510 <timer3_Nomalmode_init>
	adc_init();	 // 아날로그 초기화
     98c:	4f de       	rcall	.-866    	; 0x62c <adc_init>
     98e:	78 94       	sei
  	sei(); // 전역 인터럽트 허용
	
	menu();
     990:	6f de       	rcall	.-802    	; 0x670 <menu>
     992:	af db       	rcall	.-2210   	; 0xf2 <rx0_ch>
	while(rx0_ch() != 's'){}
     994:	83 37       	cpi	r24, 0x73	; 115
     996:	e9 f7       	brne	.-6      	; 0x992 <main+0x1a>
     998:	88 e3       	ldi	r24, 0x38	; 56
     99a:	94 e0       	ldi	r25, 0x04	; 4
	tx0_str("System Start...\r\n");
     99c:	9e db       	rcall	.-2244   	; 0xda <tx0_str>
     99e:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <hour_0>
     9a2:	90 91 75 04 	lds	r25, 0x0475	; 0x800475 <hour_0+0x1>
	
	while(1){
		system_second = hour_0*60 + minute_0;
     9a6:	4c e3       	ldi	r20, 0x3C	; 60
     9a8:	48 9f       	mul	r20, r24
     9aa:	90 01       	movw	r18, r0
     9ac:	49 9f       	mul	r20, r25
     9ae:	30 0d       	add	r19, r0
     9b0:	11 24       	eor	r1, r1
     9b2:	80 91 72 04 	lds	r24, 0x0472	; 0x800472 <minute_0>
     9b6:	90 91 73 04 	lds	r25, 0x0473	; 0x800473 <minute_0+0x1>
     9ba:	82 0f       	add	r24, r18
     9bc:	93 1f       	adc	r25, r19
     9be:	90 93 71 04 	sts	0x0471, r25	; 0x800471 <system_second+0x1>
     9c2:	80 93 70 04 	sts	0x0470, r24	; 0x800470 <system_second>
     9c6:	be db       	rcall	.-2180   	; 0x144 <fnd_control>
		fnd_control(system_second);
     9c8:	80 9b       	sbis	0x10, 0	; 16
     9ca:	e9 cf       	rjmp	.-46     	; 0x99e <main+0x26>
		if(PIND & (1<<PIND0) != 0) break;
     9cc:	88 ec       	ldi	r24, 0xC8	; 200
     9ce:	91 e0       	ldi	r25, 0x01	; 1
	}
	
	tx0_str("\r\n");
     9d0:	84 db       	rcall	.-2296   	; 0xda <tx0_str>
     9d2:	80 91 73 04 	lds	r24, 0x0473	; 0x800473 <minute_0+0x1>
     9d6:	8f 93       	push	r24
	sprintf(str1,"Current Time : %02d:%02d \r",hour_0,minute_0);
     9d8:	80 91 72 04 	lds	r24, 0x0472	; 0x800472 <minute_0>
     9dc:	8f 93       	push	r24
     9de:	80 91 75 04 	lds	r24, 0x0475	; 0x800475 <hour_0+0x1>
     9e2:	8f 93       	push	r24
     9e4:	80 91 74 04 	lds	r24, 0x0474	; 0x800474 <hour_0>
     9e8:	8f 93       	push	r24
     9ea:	8a e4       	ldi	r24, 0x4A	; 74
     9ec:	94 e0       	ldi	r25, 0x04	; 4
     9ee:	9f 93       	push	r25
     9f0:	8f 93       	push	r24
     9f2:	8e e7       	ldi	r24, 0x7E	; 126
     9f4:	94 e0       	ldi	r25, 0x04	; 4
     9f6:	9f 93       	push	r25
     9f8:	8f 93       	push	r24
     9fa:	ce d0       	rcall	.+412    	; 0xb98 <sprintf>
     9fc:	8e e7       	ldi	r24, 0x7E	; 126
     9fe:	94 e0       	ldi	r25, 0x04	; 4
	tx0_str(str1);
     a00:	6c db       	rcall	.-2344   	; 0xda <tx0_str>
     a02:	10 92 7d 04 	sts	0x047D, r1	; 0x80047d <mode+0x1>
     a06:	10 92 7c 04 	sts	0x047C, r1	; 0x80047c <mode>
	
	mode = 0;
     a0a:	8d b7       	in	r24, 0x3d	; 61
     a0c:	9e b7       	in	r25, 0x3e	; 62
     a0e:	08 96       	adiw	r24, 0x08	; 8
     a10:	0f b6       	in	r0, 0x3f	; 63
     a12:	f8 94       	cli
     a14:	9e bf       	out	0x3e, r25	; 62
     a16:	0f be       	out	0x3f, r0	; 63
     a18:	8d bf       	out	0x3d, r24	; 61
     a1a:	00 e0       	ldi	r16, 0x00	; 0
     a1c:	10 e0       	ldi	r17, 0x00	; 0
     a1e:	c0 e0       	ldi	r28, 0x00	; 0
//* 메인 함수 *//
int main(void) {
	
	//* [지역 변수 설정] *//
	int joystick_x = 0;
	int joystick_y = 0;
     a20:	d0 e0       	ldi	r29, 0x00	; 0
     a22:	80 91 7c 04 	lds	r24, 0x047C	; 0x80047c <mode>

//* 메인 함수 *//
int main(void) {
	
	//* [지역 변수 설정] *//
	int joystick_x = 0;
     a26:	90 91 7d 04 	lds	r25, 0x047D	; 0x80047d <mode+0x1>
	sprintf(str1,"Current Time : %02d:%02d \r",hour_0,minute_0);
	tx0_str(str1);
	
	mode = 0;
    while (1) {
	switch (mode) { // 모드에 따른 동작 분기
     a2a:	81 30       	cpi	r24, 0x01	; 1
     a2c:	91 05       	cpc	r25, r1
     a2e:	61 f0       	breq	.+24     	; 0xa48 <main+0xd0>
     a30:	82 30       	cpi	r24, 0x02	; 2
     a32:	91 05       	cpc	r25, r1
     a34:	91 f1       	breq	.+100    	; 0xa9a <main+0x122>
     a36:	89 2b       	or	r24, r25
     a38:	09 f0       	breq	.+2      	; 0xa3c <main+0xc4>
     a3a:	57 c0       	rjmp	.+174    	; 0xaea <main+0x172>
     a3c:	80 91 70 04 	lds	r24, 0x0470	; 0x800470 <system_second>
            	case 0:
			//PORTA = 0x01;
			fnd_control(system_second); // FND 표시
     a40:	90 91 71 04 	lds	r25, 0x0471	; 0x800471 <system_second+0x1>
     a44:	7f db       	rcall	.-2306   	; 0x144 <fnd_control>
     a46:	67 c0       	rjmp	.+206    	; 0xb16 <main+0x19e>
	                break;
     a48:	80 91 6c 04 	lds	r24, 0x046C	; 0x80046c <isTimer_set>
		case 1:
			//PORTA = 0x02;
			if(isTimer_set == 0){
     a4c:	90 91 6d 04 	lds	r25, 0x046D	; 0x80046d <isTimer_set+0x1>
     a50:	89 2b       	or	r24, r25
     a52:	21 f4       	brne	.+8      	; 0xa5c <main+0xe4>
				joystick_x = read_adc();
     a54:	f7 dd       	rcall	.-1042   	; 0x644 <read_adc>
     a56:	ec 01       	movw	r28, r24
     a58:	f5 dd       	rcall	.-1046   	; 0x644 <read_adc>
				joystick_y = read_adc();
     a5a:	8c 01       	movw	r16, r24
     a5c:	40 91 7c 04 	lds	r20, 0x047C	; 0x80047c <mode>
			}
			Time_set(joystick_x,joystick_y,mode);
     a60:	50 91 7d 04 	lds	r21, 0x047D	; 0x80047d <mode+0x1>
     a64:	b8 01       	movw	r22, r16
     a66:	ce 01       	movw	r24, r28
     a68:	40 de       	rcall	.-896    	; 0x6ea <Time_set>
     a6a:	80 91 6c 04 	lds	r24, 0x046C	; 0x80046c <isTimer_set>
			if(isTimer_set == 0) fnd_control(temp_second[0]);
     a6e:	90 91 6d 04 	lds	r25, 0x046D	; 0x80046d <isTimer_set+0x1>
     a72:	89 2b       	or	r24, r25
     a74:	29 f4       	brne	.+10     	; 0xa80 <main+0x108>
     a76:	80 91 76 04 	lds	r24, 0x0476	; 0x800476 <temp_second>
     a7a:	90 91 77 04 	lds	r25, 0x0477	; 0x800477 <temp_second+0x1>
     a7e:	62 db       	rcall	.-2364   	; 0x144 <fnd_control>
     a80:	80 91 6c 04 	lds	r24, 0x046C	; 0x80046c <isTimer_set>
			if(isTimer_set == 1) fnd_control(timer_second);
     a84:	90 91 6d 04 	lds	r25, 0x046D	; 0x80046d <isTimer_set+0x1>
     a88:	01 97       	sbiw	r24, 0x01	; 1
     a8a:	09 f0       	breq	.+2      	; 0xa8e <main+0x116>
     a8c:	44 c0       	rjmp	.+136    	; 0xb16 <main+0x19e>
     a8e:	80 91 6e 04 	lds	r24, 0x046E	; 0x80046e <timer_second>
     a92:	90 91 6f 04 	lds	r25, 0x046F	; 0x80046f <timer_second+0x1>
     a96:	56 db       	rcall	.-2388   	; 0x144 <fnd_control>
     a98:	3e c0       	rjmp	.+124    	; 0xb16 <main+0x19e>
			break;
        case 2:
			//PORTA = 0x04;
			if(isAlarm_set == 0){
     a9a:	80 91 68 04 	lds	r24, 0x0468	; 0x800468 <isAlarm_set>
     a9e:	90 91 69 04 	lds	r25, 0x0469	; 0x800469 <isAlarm_set+0x1>
     aa2:	89 2b       	or	r24, r25
     aa4:	21 f4       	brne	.+8      	; 0xaae <main+0x136>
				joystick_x = read_adc();
     aa6:	ce dd       	rcall	.-1124   	; 0x644 <read_adc>
     aa8:	ec 01       	movw	r28, r24
				joystick_y = read_adc();
     aaa:	cc dd       	rcall	.-1128   	; 0x644 <read_adc>
     aac:	8c 01       	movw	r16, r24
     aae:	40 91 7c 04 	lds	r20, 0x047C	; 0x80047c <mode>
			}
			Time_set(joystick_x,joystick_y,mode);
     ab2:	50 91 7d 04 	lds	r21, 0x047D	; 0x80047d <mode+0x1>
     ab6:	b8 01       	movw	r22, r16
     ab8:	ce 01       	movw	r24, r28
     aba:	17 de       	rcall	.-978    	; 0x6ea <Time_set>
     abc:	80 91 68 04 	lds	r24, 0x0468	; 0x800468 <isAlarm_set>
			if(isAlarm_set == 0) fnd_control(temp_second[1]);
     ac0:	90 91 69 04 	lds	r25, 0x0469	; 0x800469 <isAlarm_set+0x1>
     ac4:	89 2b       	or	r24, r25
     ac6:	29 f4       	brne	.+10     	; 0xad2 <main+0x15a>
     ac8:	80 91 78 04 	lds	r24, 0x0478	; 0x800478 <temp_second+0x2>
     acc:	90 91 79 04 	lds	r25, 0x0479	; 0x800479 <temp_second+0x3>
     ad0:	39 db       	rcall	.-2446   	; 0x144 <fnd_control>
     ad2:	80 91 68 04 	lds	r24, 0x0468	; 0x800468 <isAlarm_set>
			if(isAlarm_set == 1) fnd_control(alarm_second);
     ad6:	90 91 69 04 	lds	r25, 0x0469	; 0x800469 <isAlarm_set+0x1>
     ada:	01 97       	sbiw	r24, 0x01	; 1
     adc:	e1 f4       	brne	.+56     	; 0xb16 <main+0x19e>
     ade:	80 91 6a 04 	lds	r24, 0x046A	; 0x80046a <alarm_second>
     ae2:	90 91 6b 04 	lds	r25, 0x046B	; 0x80046b <alarm_second+0x1>
     ae6:	2e db       	rcall	.-2468   	; 0x144 <fnd_control>
     ae8:	16 c0       	rjmp	.+44     	; 0xb16 <main+0x19e>
     aea:	e5 e6       	ldi	r30, 0x65	; 101
     aec:	f0 e0       	ldi	r31, 0x00	; 0
     aee:	84 e0       	ldi	r24, 0x04	; 4
			break;
		default:
			//d
			PORTG = 0x04;
     af0:	80 83       	st	Z, r24
     af2:	81 ea       	ldi	r24, 0xA1	; 161
     af4:	85 bb       	out	0x15, r24	; 21
     af6:	8f e9       	ldi	r24, 0x9F	; 159
			PORTC = ~0x5e;
     af8:	9f e0       	ldi	r25, 0x0F	; 15
     afa:	01 97       	sbiw	r24, 0x01	; 1
     afc:	f1 f7       	brne	.-4      	; 0xafa <main+0x182>
     afe:	00 c0       	rjmp	.+0      	; 0xb00 <main+0x188>
     b00:	00 00       	nop
     b02:	88 e0       	ldi	r24, 0x08	; 8
     b04:	80 83       	st	Z, r24
     b06:	81 e9       	ldi	r24, 0x91	; 145
			_delay_ms(1);
			//y
			PORTG = 0x08;
     b08:	85 bb       	out	0x15, r24	; 21
     b0a:	8f e9       	ldi	r24, 0x9F	; 159
			PORTC = ~0x6e;
     b0c:	9f e0       	ldi	r25, 0x0F	; 15
     b0e:	01 97       	sbiw	r24, 0x01	; 1
     b10:	f1 f7       	brne	.-4      	; 0xb0e <main+0x196>
     b12:	00 c0       	rjmp	.+0      	; 0xb14 <main+0x19c>
     b14:	00 00       	nop
     b16:	20 91 6a 04 	lds	r18, 0x046A	; 0x80046a <alarm_second>
     b1a:	30 91 6b 04 	lds	r19, 0x046B	; 0x80046b <alarm_second+0x1>
			_delay_ms(1);
			break;
		}
		
		// 알람설정 시간과 현제시간이 같을때 부저울리기
		if(alarm_second == system_second){
     b1e:	80 91 70 04 	lds	r24, 0x0470	; 0x800470 <system_second>
     b22:	90 91 71 04 	lds	r25, 0x0471	; 0x800471 <system_second+0x1>
     b26:	28 17       	cp	r18, r24
     b28:	39 07       	cpc	r19, r25
     b2a:	09 f0       	breq	.+2      	; 0xb2e <main+0x1b6>
     b2c:	7a cf       	rjmp	.-268    	; 0xa22 <main+0xaa>
     b2e:	87 b7       	in	r24, 0x37	; 55
     b30:	81 60       	ori	r24, 0x01	; 1
     b32:	87 bf       	out	0x37, r24	; 55
			TIMSK |= (1<<TOIE0);
     b34:	88 b3       	in	r24, 0x18	; 24
     b36:	88 bb       	out	0x18, r24	; 24
     b38:	10 92 6b 04 	sts	0x046B, r1	; 0x80046b <alarm_second+0x1>
			PORTB |= (0 << 4);
     b3c:	10 92 6a 04 	sts	0x046A, r1	; 0x80046a <alarm_second>
			alarm_second = 0;
     b40:	10 92 79 04 	sts	0x0479, r1	; 0x800479 <temp_second+0x3>
     b44:	10 92 78 04 	sts	0x0478, r1	; 0x800478 <temp_second+0x2>
			temp_second[1] = 0;
     b48:	6c cf       	rjmp	.-296    	; 0xa22 <main+0xaa>

00000b4a <__divmodhi4>:
     b4a:	97 fb       	bst	r25, 7
     b4c:	07 2e       	mov	r0, r23
     b4e:	16 f4       	brtc	.+4      	; 0xb54 <__divmodhi4+0xa>
     b50:	00 94       	com	r0
     b52:	06 d0       	rcall	.+12     	; 0xb60 <__divmodhi4_neg1>
     b54:	77 fd       	sbrc	r23, 7
     b56:	08 d0       	rcall	.+16     	; 0xb68 <__divmodhi4_neg2>
     b58:	0b d0       	rcall	.+22     	; 0xb70 <__udivmodhi4>
     b5a:	07 fc       	sbrc	r0, 7
     b5c:	05 d0       	rcall	.+10     	; 0xb68 <__divmodhi4_neg2>
     b5e:	3e f4       	brtc	.+14     	; 0xb6e <__divmodhi4_exit>

00000b60 <__divmodhi4_neg1>:
     b60:	90 95       	com	r25
     b62:	81 95       	neg	r24
     b64:	9f 4f       	sbci	r25, 0xFF	; 255
     b66:	08 95       	ret

00000b68 <__divmodhi4_neg2>:
     b68:	70 95       	com	r23
     b6a:	61 95       	neg	r22
     b6c:	7f 4f       	sbci	r23, 0xFF	; 255

00000b6e <__divmodhi4_exit>:
     b6e:	08 95       	ret

00000b70 <__udivmodhi4>:
     b70:	aa 1b       	sub	r26, r26
     b72:	bb 1b       	sub	r27, r27
     b74:	51 e1       	ldi	r21, 0x11	; 17
     b76:	07 c0       	rjmp	.+14     	; 0xb86 <__udivmodhi4_ep>

00000b78 <__udivmodhi4_loop>:
     b78:	aa 1f       	adc	r26, r26
     b7a:	bb 1f       	adc	r27, r27
     b7c:	a6 17       	cp	r26, r22
     b7e:	b7 07       	cpc	r27, r23
     b80:	10 f0       	brcs	.+4      	; 0xb86 <__udivmodhi4_ep>
     b82:	a6 1b       	sub	r26, r22
     b84:	b7 0b       	sbc	r27, r23

00000b86 <__udivmodhi4_ep>:
     b86:	88 1f       	adc	r24, r24
     b88:	99 1f       	adc	r25, r25
     b8a:	5a 95       	dec	r21
     b8c:	a9 f7       	brne	.-22     	; 0xb78 <__udivmodhi4_loop>
     b8e:	80 95       	com	r24
     b90:	90 95       	com	r25
     b92:	bc 01       	movw	r22, r24
     b94:	cd 01       	movw	r24, r26
     b96:	08 95       	ret

00000b98 <sprintf>:
     b98:	0f 93       	push	r16
     b9a:	1f 93       	push	r17
     b9c:	cf 93       	push	r28
     b9e:	df 93       	push	r29
     ba0:	cd b7       	in	r28, 0x3d	; 61
     ba2:	de b7       	in	r29, 0x3e	; 62
     ba4:	2e 97       	sbiw	r28, 0x0e	; 14
     ba6:	0f b6       	in	r0, 0x3f	; 63
     ba8:	f8 94       	cli
     baa:	de bf       	out	0x3e, r29	; 62
     bac:	0f be       	out	0x3f, r0	; 63
     bae:	cd bf       	out	0x3d, r28	; 61
     bb0:	0d 89       	ldd	r16, Y+21	; 0x15
     bb2:	1e 89       	ldd	r17, Y+22	; 0x16
     bb4:	86 e0       	ldi	r24, 0x06	; 6
     bb6:	8c 83       	std	Y+4, r24	; 0x04
     bb8:	1a 83       	std	Y+2, r17	; 0x02
     bba:	09 83       	std	Y+1, r16	; 0x01
     bbc:	8f ef       	ldi	r24, 0xFF	; 255
     bbe:	9f e7       	ldi	r25, 0x7F	; 127
     bc0:	9e 83       	std	Y+6, r25	; 0x06
     bc2:	8d 83       	std	Y+5, r24	; 0x05
     bc4:	ae 01       	movw	r20, r28
     bc6:	47 5e       	subi	r20, 0xE7	; 231
     bc8:	5f 4f       	sbci	r21, 0xFF	; 255
     bca:	6f 89       	ldd	r22, Y+23	; 0x17
     bcc:	78 8d       	ldd	r23, Y+24	; 0x18
     bce:	ce 01       	movw	r24, r28
     bd0:	01 96       	adiw	r24, 0x01	; 1
     bd2:	10 d0       	rcall	.+32     	; 0xbf4 <vfprintf>
     bd4:	ef 81       	ldd	r30, Y+7	; 0x07
     bd6:	f8 85       	ldd	r31, Y+8	; 0x08
     bd8:	e0 0f       	add	r30, r16
     bda:	f1 1f       	adc	r31, r17
     bdc:	10 82       	st	Z, r1
     bde:	2e 96       	adiw	r28, 0x0e	; 14
     be0:	0f b6       	in	r0, 0x3f	; 63
     be2:	f8 94       	cli
     be4:	de bf       	out	0x3e, r29	; 62
     be6:	0f be       	out	0x3f, r0	; 63
     be8:	cd bf       	out	0x3d, r28	; 61
     bea:	df 91       	pop	r29
     bec:	cf 91       	pop	r28
     bee:	1f 91       	pop	r17
     bf0:	0f 91       	pop	r16
     bf2:	08 95       	ret

00000bf4 <vfprintf>:
     bf4:	2f 92       	push	r2
     bf6:	3f 92       	push	r3
     bf8:	4f 92       	push	r4
     bfa:	5f 92       	push	r5
     bfc:	6f 92       	push	r6
     bfe:	7f 92       	push	r7
     c00:	8f 92       	push	r8
     c02:	9f 92       	push	r9
     c04:	af 92       	push	r10
     c06:	bf 92       	push	r11
     c08:	cf 92       	push	r12
     c0a:	df 92       	push	r13
     c0c:	ef 92       	push	r14
     c0e:	ff 92       	push	r15
     c10:	0f 93       	push	r16
     c12:	1f 93       	push	r17
     c14:	cf 93       	push	r28
     c16:	df 93       	push	r29
     c18:	cd b7       	in	r28, 0x3d	; 61
     c1a:	de b7       	in	r29, 0x3e	; 62
     c1c:	2b 97       	sbiw	r28, 0x0b	; 11
     c1e:	0f b6       	in	r0, 0x3f	; 63
     c20:	f8 94       	cli
     c22:	de bf       	out	0x3e, r29	; 62
     c24:	0f be       	out	0x3f, r0	; 63
     c26:	cd bf       	out	0x3d, r28	; 61
     c28:	6c 01       	movw	r12, r24
     c2a:	7b 01       	movw	r14, r22
     c2c:	8a 01       	movw	r16, r20
     c2e:	fc 01       	movw	r30, r24
     c30:	17 82       	std	Z+7, r1	; 0x07
     c32:	16 82       	std	Z+6, r1	; 0x06
     c34:	83 81       	ldd	r24, Z+3	; 0x03
     c36:	81 ff       	sbrs	r24, 1
     c38:	bf c1       	rjmp	.+894    	; 0xfb8 <vfprintf+0x3c4>
     c3a:	ce 01       	movw	r24, r28
     c3c:	01 96       	adiw	r24, 0x01	; 1
     c3e:	3c 01       	movw	r6, r24
     c40:	f6 01       	movw	r30, r12
     c42:	93 81       	ldd	r25, Z+3	; 0x03
     c44:	f7 01       	movw	r30, r14
     c46:	93 fd       	sbrc	r25, 3
     c48:	85 91       	lpm	r24, Z+
     c4a:	93 ff       	sbrs	r25, 3
     c4c:	81 91       	ld	r24, Z+
     c4e:	7f 01       	movw	r14, r30
     c50:	88 23       	and	r24, r24
     c52:	09 f4       	brne	.+2      	; 0xc56 <vfprintf+0x62>
     c54:	ad c1       	rjmp	.+858    	; 0xfb0 <vfprintf+0x3bc>
     c56:	85 32       	cpi	r24, 0x25	; 37
     c58:	39 f4       	brne	.+14     	; 0xc68 <vfprintf+0x74>
     c5a:	93 fd       	sbrc	r25, 3
     c5c:	85 91       	lpm	r24, Z+
     c5e:	93 ff       	sbrs	r25, 3
     c60:	81 91       	ld	r24, Z+
     c62:	7f 01       	movw	r14, r30
     c64:	85 32       	cpi	r24, 0x25	; 37
     c66:	21 f4       	brne	.+8      	; 0xc70 <vfprintf+0x7c>
     c68:	b6 01       	movw	r22, r12
     c6a:	90 e0       	ldi	r25, 0x00	; 0
     c6c:	d6 d1       	rcall	.+940    	; 0x101a <fputc>
     c6e:	e8 cf       	rjmp	.-48     	; 0xc40 <vfprintf+0x4c>
     c70:	91 2c       	mov	r9, r1
     c72:	21 2c       	mov	r2, r1
     c74:	31 2c       	mov	r3, r1
     c76:	ff e1       	ldi	r31, 0x1F	; 31
     c78:	f3 15       	cp	r31, r3
     c7a:	d8 f0       	brcs	.+54     	; 0xcb2 <vfprintf+0xbe>
     c7c:	8b 32       	cpi	r24, 0x2B	; 43
     c7e:	79 f0       	breq	.+30     	; 0xc9e <vfprintf+0xaa>
     c80:	38 f4       	brcc	.+14     	; 0xc90 <vfprintf+0x9c>
     c82:	80 32       	cpi	r24, 0x20	; 32
     c84:	79 f0       	breq	.+30     	; 0xca4 <vfprintf+0xb0>
     c86:	83 32       	cpi	r24, 0x23	; 35
     c88:	a1 f4       	brne	.+40     	; 0xcb2 <vfprintf+0xbe>
     c8a:	23 2d       	mov	r18, r3
     c8c:	20 61       	ori	r18, 0x10	; 16
     c8e:	1d c0       	rjmp	.+58     	; 0xcca <vfprintf+0xd6>
     c90:	8d 32       	cpi	r24, 0x2D	; 45
     c92:	61 f0       	breq	.+24     	; 0xcac <vfprintf+0xb8>
     c94:	80 33       	cpi	r24, 0x30	; 48
     c96:	69 f4       	brne	.+26     	; 0xcb2 <vfprintf+0xbe>
     c98:	23 2d       	mov	r18, r3
     c9a:	21 60       	ori	r18, 0x01	; 1
     c9c:	16 c0       	rjmp	.+44     	; 0xcca <vfprintf+0xd6>
     c9e:	83 2d       	mov	r24, r3
     ca0:	82 60       	ori	r24, 0x02	; 2
     ca2:	38 2e       	mov	r3, r24
     ca4:	e3 2d       	mov	r30, r3
     ca6:	e4 60       	ori	r30, 0x04	; 4
     ca8:	3e 2e       	mov	r3, r30
     caa:	2a c0       	rjmp	.+84     	; 0xd00 <vfprintf+0x10c>
     cac:	f3 2d       	mov	r31, r3
     cae:	f8 60       	ori	r31, 0x08	; 8
     cb0:	1d c0       	rjmp	.+58     	; 0xcec <vfprintf+0xf8>
     cb2:	37 fc       	sbrc	r3, 7
     cb4:	2d c0       	rjmp	.+90     	; 0xd10 <vfprintf+0x11c>
     cb6:	20 ed       	ldi	r18, 0xD0	; 208
     cb8:	28 0f       	add	r18, r24
     cba:	2a 30       	cpi	r18, 0x0A	; 10
     cbc:	40 f0       	brcs	.+16     	; 0xcce <vfprintf+0xda>
     cbe:	8e 32       	cpi	r24, 0x2E	; 46
     cc0:	b9 f4       	brne	.+46     	; 0xcf0 <vfprintf+0xfc>
     cc2:	36 fc       	sbrc	r3, 6
     cc4:	75 c1       	rjmp	.+746    	; 0xfb0 <vfprintf+0x3bc>
     cc6:	23 2d       	mov	r18, r3
     cc8:	20 64       	ori	r18, 0x40	; 64
     cca:	32 2e       	mov	r3, r18
     ccc:	19 c0       	rjmp	.+50     	; 0xd00 <vfprintf+0x10c>
     cce:	36 fe       	sbrs	r3, 6
     cd0:	06 c0       	rjmp	.+12     	; 0xcde <vfprintf+0xea>
     cd2:	8a e0       	ldi	r24, 0x0A	; 10
     cd4:	98 9e       	mul	r9, r24
     cd6:	20 0d       	add	r18, r0
     cd8:	11 24       	eor	r1, r1
     cda:	92 2e       	mov	r9, r18
     cdc:	11 c0       	rjmp	.+34     	; 0xd00 <vfprintf+0x10c>
     cde:	ea e0       	ldi	r30, 0x0A	; 10
     ce0:	2e 9e       	mul	r2, r30
     ce2:	20 0d       	add	r18, r0
     ce4:	11 24       	eor	r1, r1
     ce6:	22 2e       	mov	r2, r18
     ce8:	f3 2d       	mov	r31, r3
     cea:	f0 62       	ori	r31, 0x20	; 32
     cec:	3f 2e       	mov	r3, r31
     cee:	08 c0       	rjmp	.+16     	; 0xd00 <vfprintf+0x10c>
     cf0:	8c 36       	cpi	r24, 0x6C	; 108
     cf2:	21 f4       	brne	.+8      	; 0xcfc <vfprintf+0x108>
     cf4:	83 2d       	mov	r24, r3
     cf6:	80 68       	ori	r24, 0x80	; 128
     cf8:	38 2e       	mov	r3, r24
     cfa:	02 c0       	rjmp	.+4      	; 0xd00 <vfprintf+0x10c>
     cfc:	88 36       	cpi	r24, 0x68	; 104
     cfe:	41 f4       	brne	.+16     	; 0xd10 <vfprintf+0x11c>
     d00:	f7 01       	movw	r30, r14
     d02:	93 fd       	sbrc	r25, 3
     d04:	85 91       	lpm	r24, Z+
     d06:	93 ff       	sbrs	r25, 3
     d08:	81 91       	ld	r24, Z+
     d0a:	7f 01       	movw	r14, r30
     d0c:	81 11       	cpse	r24, r1
     d0e:	b3 cf       	rjmp	.-154    	; 0xc76 <vfprintf+0x82>
     d10:	98 2f       	mov	r25, r24
     d12:	9f 7d       	andi	r25, 0xDF	; 223
     d14:	95 54       	subi	r25, 0x45	; 69
     d16:	93 30       	cpi	r25, 0x03	; 3
     d18:	28 f4       	brcc	.+10     	; 0xd24 <vfprintf+0x130>
     d1a:	0c 5f       	subi	r16, 0xFC	; 252
     d1c:	1f 4f       	sbci	r17, 0xFF	; 255
     d1e:	9f e3       	ldi	r25, 0x3F	; 63
     d20:	99 83       	std	Y+1, r25	; 0x01
     d22:	0d c0       	rjmp	.+26     	; 0xd3e <vfprintf+0x14a>
     d24:	83 36       	cpi	r24, 0x63	; 99
     d26:	31 f0       	breq	.+12     	; 0xd34 <vfprintf+0x140>
     d28:	83 37       	cpi	r24, 0x73	; 115
     d2a:	71 f0       	breq	.+28     	; 0xd48 <vfprintf+0x154>
     d2c:	83 35       	cpi	r24, 0x53	; 83
     d2e:	09 f0       	breq	.+2      	; 0xd32 <vfprintf+0x13e>
     d30:	55 c0       	rjmp	.+170    	; 0xddc <vfprintf+0x1e8>
     d32:	20 c0       	rjmp	.+64     	; 0xd74 <vfprintf+0x180>
     d34:	f8 01       	movw	r30, r16
     d36:	80 81       	ld	r24, Z
     d38:	89 83       	std	Y+1, r24	; 0x01
     d3a:	0e 5f       	subi	r16, 0xFE	; 254
     d3c:	1f 4f       	sbci	r17, 0xFF	; 255
     d3e:	88 24       	eor	r8, r8
     d40:	83 94       	inc	r8
     d42:	91 2c       	mov	r9, r1
     d44:	53 01       	movw	r10, r6
     d46:	12 c0       	rjmp	.+36     	; 0xd6c <vfprintf+0x178>
     d48:	28 01       	movw	r4, r16
     d4a:	f2 e0       	ldi	r31, 0x02	; 2
     d4c:	4f 0e       	add	r4, r31
     d4e:	51 1c       	adc	r5, r1
     d50:	f8 01       	movw	r30, r16
     d52:	a0 80       	ld	r10, Z
     d54:	b1 80       	ldd	r11, Z+1	; 0x01
     d56:	36 fe       	sbrs	r3, 6
     d58:	03 c0       	rjmp	.+6      	; 0xd60 <vfprintf+0x16c>
     d5a:	69 2d       	mov	r22, r9
     d5c:	70 e0       	ldi	r23, 0x00	; 0
     d5e:	02 c0       	rjmp	.+4      	; 0xd64 <vfprintf+0x170>
     d60:	6f ef       	ldi	r22, 0xFF	; 255
     d62:	7f ef       	ldi	r23, 0xFF	; 255
     d64:	c5 01       	movw	r24, r10
     d66:	4e d1       	rcall	.+668    	; 0x1004 <strnlen>
     d68:	4c 01       	movw	r8, r24
     d6a:	82 01       	movw	r16, r4
     d6c:	f3 2d       	mov	r31, r3
     d6e:	ff 77       	andi	r31, 0x7F	; 127
     d70:	3f 2e       	mov	r3, r31
     d72:	15 c0       	rjmp	.+42     	; 0xd9e <vfprintf+0x1aa>
     d74:	28 01       	movw	r4, r16
     d76:	22 e0       	ldi	r18, 0x02	; 2
     d78:	42 0e       	add	r4, r18
     d7a:	51 1c       	adc	r5, r1
     d7c:	f8 01       	movw	r30, r16
     d7e:	a0 80       	ld	r10, Z
     d80:	b1 80       	ldd	r11, Z+1	; 0x01
     d82:	36 fe       	sbrs	r3, 6
     d84:	03 c0       	rjmp	.+6      	; 0xd8c <vfprintf+0x198>
     d86:	69 2d       	mov	r22, r9
     d88:	70 e0       	ldi	r23, 0x00	; 0
     d8a:	02 c0       	rjmp	.+4      	; 0xd90 <vfprintf+0x19c>
     d8c:	6f ef       	ldi	r22, 0xFF	; 255
     d8e:	7f ef       	ldi	r23, 0xFF	; 255
     d90:	c5 01       	movw	r24, r10
     d92:	2d d1       	rcall	.+602    	; 0xfee <strnlen_P>
     d94:	4c 01       	movw	r8, r24
     d96:	f3 2d       	mov	r31, r3
     d98:	f0 68       	ori	r31, 0x80	; 128
     d9a:	3f 2e       	mov	r3, r31
     d9c:	82 01       	movw	r16, r4
     d9e:	33 fc       	sbrc	r3, 3
     da0:	19 c0       	rjmp	.+50     	; 0xdd4 <vfprintf+0x1e0>
     da2:	82 2d       	mov	r24, r2
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	88 16       	cp	r8, r24
     da8:	99 06       	cpc	r9, r25
     daa:	a0 f4       	brcc	.+40     	; 0xdd4 <vfprintf+0x1e0>
     dac:	b6 01       	movw	r22, r12
     dae:	80 e2       	ldi	r24, 0x20	; 32
     db0:	90 e0       	ldi	r25, 0x00	; 0
     db2:	33 d1       	rcall	.+614    	; 0x101a <fputc>
     db4:	2a 94       	dec	r2
     db6:	f5 cf       	rjmp	.-22     	; 0xda2 <vfprintf+0x1ae>
     db8:	f5 01       	movw	r30, r10
     dba:	37 fc       	sbrc	r3, 7
     dbc:	85 91       	lpm	r24, Z+
     dbe:	37 fe       	sbrs	r3, 7
     dc0:	81 91       	ld	r24, Z+
     dc2:	5f 01       	movw	r10, r30
     dc4:	b6 01       	movw	r22, r12
     dc6:	90 e0       	ldi	r25, 0x00	; 0
     dc8:	28 d1       	rcall	.+592    	; 0x101a <fputc>
     dca:	21 10       	cpse	r2, r1
     dcc:	2a 94       	dec	r2
     dce:	21 e0       	ldi	r18, 0x01	; 1
     dd0:	82 1a       	sub	r8, r18
     dd2:	91 08       	sbc	r9, r1
     dd4:	81 14       	cp	r8, r1
     dd6:	91 04       	cpc	r9, r1
     dd8:	79 f7       	brne	.-34     	; 0xdb8 <vfprintf+0x1c4>
     dda:	e1 c0       	rjmp	.+450    	; 0xf9e <vfprintf+0x3aa>
     ddc:	84 36       	cpi	r24, 0x64	; 100
     dde:	11 f0       	breq	.+4      	; 0xde4 <vfprintf+0x1f0>
     de0:	89 36       	cpi	r24, 0x69	; 105
     de2:	39 f5       	brne	.+78     	; 0xe32 <vfprintf+0x23e>
     de4:	f8 01       	movw	r30, r16
     de6:	37 fe       	sbrs	r3, 7
     de8:	07 c0       	rjmp	.+14     	; 0xdf8 <vfprintf+0x204>
     dea:	60 81       	ld	r22, Z
     dec:	71 81       	ldd	r23, Z+1	; 0x01
     dee:	82 81       	ldd	r24, Z+2	; 0x02
     df0:	93 81       	ldd	r25, Z+3	; 0x03
     df2:	0c 5f       	subi	r16, 0xFC	; 252
     df4:	1f 4f       	sbci	r17, 0xFF	; 255
     df6:	08 c0       	rjmp	.+16     	; 0xe08 <vfprintf+0x214>
     df8:	60 81       	ld	r22, Z
     dfa:	71 81       	ldd	r23, Z+1	; 0x01
     dfc:	07 2e       	mov	r0, r23
     dfe:	00 0c       	add	r0, r0
     e00:	88 0b       	sbc	r24, r24
     e02:	99 0b       	sbc	r25, r25
     e04:	0e 5f       	subi	r16, 0xFE	; 254
     e06:	1f 4f       	sbci	r17, 0xFF	; 255
     e08:	f3 2d       	mov	r31, r3
     e0a:	ff 76       	andi	r31, 0x6F	; 111
     e0c:	3f 2e       	mov	r3, r31
     e0e:	97 ff       	sbrs	r25, 7
     e10:	09 c0       	rjmp	.+18     	; 0xe24 <vfprintf+0x230>
     e12:	90 95       	com	r25
     e14:	80 95       	com	r24
     e16:	70 95       	com	r23
     e18:	61 95       	neg	r22
     e1a:	7f 4f       	sbci	r23, 0xFF	; 255
     e1c:	8f 4f       	sbci	r24, 0xFF	; 255
     e1e:	9f 4f       	sbci	r25, 0xFF	; 255
     e20:	f0 68       	ori	r31, 0x80	; 128
     e22:	3f 2e       	mov	r3, r31
     e24:	2a e0       	ldi	r18, 0x0A	; 10
     e26:	30 e0       	ldi	r19, 0x00	; 0
     e28:	a3 01       	movw	r20, r6
     e2a:	33 d1       	rcall	.+614    	; 0x1092 <__ultoa_invert>
     e2c:	88 2e       	mov	r8, r24
     e2e:	86 18       	sub	r8, r6
     e30:	44 c0       	rjmp	.+136    	; 0xeba <vfprintf+0x2c6>
     e32:	85 37       	cpi	r24, 0x75	; 117
     e34:	31 f4       	brne	.+12     	; 0xe42 <vfprintf+0x24e>
     e36:	23 2d       	mov	r18, r3
     e38:	2f 7e       	andi	r18, 0xEF	; 239
     e3a:	b2 2e       	mov	r11, r18
     e3c:	2a e0       	ldi	r18, 0x0A	; 10
     e3e:	30 e0       	ldi	r19, 0x00	; 0
     e40:	25 c0       	rjmp	.+74     	; 0xe8c <vfprintf+0x298>
     e42:	93 2d       	mov	r25, r3
     e44:	99 7f       	andi	r25, 0xF9	; 249
     e46:	b9 2e       	mov	r11, r25
     e48:	8f 36       	cpi	r24, 0x6F	; 111
     e4a:	c1 f0       	breq	.+48     	; 0xe7c <vfprintf+0x288>
     e4c:	18 f4       	brcc	.+6      	; 0xe54 <vfprintf+0x260>
     e4e:	88 35       	cpi	r24, 0x58	; 88
     e50:	79 f0       	breq	.+30     	; 0xe70 <vfprintf+0x27c>
     e52:	ae c0       	rjmp	.+348    	; 0xfb0 <vfprintf+0x3bc>
     e54:	80 37       	cpi	r24, 0x70	; 112
     e56:	19 f0       	breq	.+6      	; 0xe5e <vfprintf+0x26a>
     e58:	88 37       	cpi	r24, 0x78	; 120
     e5a:	21 f0       	breq	.+8      	; 0xe64 <vfprintf+0x270>
     e5c:	a9 c0       	rjmp	.+338    	; 0xfb0 <vfprintf+0x3bc>
     e5e:	e9 2f       	mov	r30, r25
     e60:	e0 61       	ori	r30, 0x10	; 16
     e62:	be 2e       	mov	r11, r30
     e64:	b4 fe       	sbrs	r11, 4
     e66:	0d c0       	rjmp	.+26     	; 0xe82 <vfprintf+0x28e>
     e68:	fb 2d       	mov	r31, r11
     e6a:	f4 60       	ori	r31, 0x04	; 4
     e6c:	bf 2e       	mov	r11, r31
     e6e:	09 c0       	rjmp	.+18     	; 0xe82 <vfprintf+0x28e>
     e70:	34 fe       	sbrs	r3, 4
     e72:	0a c0       	rjmp	.+20     	; 0xe88 <vfprintf+0x294>
     e74:	29 2f       	mov	r18, r25
     e76:	26 60       	ori	r18, 0x06	; 6
     e78:	b2 2e       	mov	r11, r18
     e7a:	06 c0       	rjmp	.+12     	; 0xe88 <vfprintf+0x294>
     e7c:	28 e0       	ldi	r18, 0x08	; 8
     e7e:	30 e0       	ldi	r19, 0x00	; 0
     e80:	05 c0       	rjmp	.+10     	; 0xe8c <vfprintf+0x298>
     e82:	20 e1       	ldi	r18, 0x10	; 16
     e84:	30 e0       	ldi	r19, 0x00	; 0
     e86:	02 c0       	rjmp	.+4      	; 0xe8c <vfprintf+0x298>
     e88:	20 e1       	ldi	r18, 0x10	; 16
     e8a:	32 e0       	ldi	r19, 0x02	; 2
     e8c:	f8 01       	movw	r30, r16
     e8e:	b7 fe       	sbrs	r11, 7
     e90:	07 c0       	rjmp	.+14     	; 0xea0 <vfprintf+0x2ac>
     e92:	60 81       	ld	r22, Z
     e94:	71 81       	ldd	r23, Z+1	; 0x01
     e96:	82 81       	ldd	r24, Z+2	; 0x02
     e98:	93 81       	ldd	r25, Z+3	; 0x03
     e9a:	0c 5f       	subi	r16, 0xFC	; 252
     e9c:	1f 4f       	sbci	r17, 0xFF	; 255
     e9e:	06 c0       	rjmp	.+12     	; 0xeac <vfprintf+0x2b8>
     ea0:	60 81       	ld	r22, Z
     ea2:	71 81       	ldd	r23, Z+1	; 0x01
     ea4:	80 e0       	ldi	r24, 0x00	; 0
     ea6:	90 e0       	ldi	r25, 0x00	; 0
     ea8:	0e 5f       	subi	r16, 0xFE	; 254
     eaa:	1f 4f       	sbci	r17, 0xFF	; 255
     eac:	a3 01       	movw	r20, r6
     eae:	f1 d0       	rcall	.+482    	; 0x1092 <__ultoa_invert>
     eb0:	88 2e       	mov	r8, r24
     eb2:	86 18       	sub	r8, r6
     eb4:	fb 2d       	mov	r31, r11
     eb6:	ff 77       	andi	r31, 0x7F	; 127
     eb8:	3f 2e       	mov	r3, r31
     eba:	36 fe       	sbrs	r3, 6
     ebc:	0d c0       	rjmp	.+26     	; 0xed8 <vfprintf+0x2e4>
     ebe:	23 2d       	mov	r18, r3
     ec0:	2e 7f       	andi	r18, 0xFE	; 254
     ec2:	a2 2e       	mov	r10, r18
     ec4:	89 14       	cp	r8, r9
     ec6:	58 f4       	brcc	.+22     	; 0xede <vfprintf+0x2ea>
     ec8:	34 fe       	sbrs	r3, 4
     eca:	0b c0       	rjmp	.+22     	; 0xee2 <vfprintf+0x2ee>
     ecc:	32 fc       	sbrc	r3, 2
     ece:	09 c0       	rjmp	.+18     	; 0xee2 <vfprintf+0x2ee>
     ed0:	83 2d       	mov	r24, r3
     ed2:	8e 7e       	andi	r24, 0xEE	; 238
     ed4:	a8 2e       	mov	r10, r24
     ed6:	05 c0       	rjmp	.+10     	; 0xee2 <vfprintf+0x2ee>
     ed8:	b8 2c       	mov	r11, r8
     eda:	a3 2c       	mov	r10, r3
     edc:	03 c0       	rjmp	.+6      	; 0xee4 <vfprintf+0x2f0>
     ede:	b8 2c       	mov	r11, r8
     ee0:	01 c0       	rjmp	.+2      	; 0xee4 <vfprintf+0x2f0>
     ee2:	b9 2c       	mov	r11, r9
     ee4:	a4 fe       	sbrs	r10, 4
     ee6:	0f c0       	rjmp	.+30     	; 0xf06 <vfprintf+0x312>
     ee8:	fe 01       	movw	r30, r28
     eea:	e8 0d       	add	r30, r8
     eec:	f1 1d       	adc	r31, r1
     eee:	80 81       	ld	r24, Z
     ef0:	80 33       	cpi	r24, 0x30	; 48
     ef2:	21 f4       	brne	.+8      	; 0xefc <vfprintf+0x308>
     ef4:	9a 2d       	mov	r25, r10
     ef6:	99 7e       	andi	r25, 0xE9	; 233
     ef8:	a9 2e       	mov	r10, r25
     efa:	09 c0       	rjmp	.+18     	; 0xf0e <vfprintf+0x31a>
     efc:	a2 fe       	sbrs	r10, 2
     efe:	06 c0       	rjmp	.+12     	; 0xf0c <vfprintf+0x318>
     f00:	b3 94       	inc	r11
     f02:	b3 94       	inc	r11
     f04:	04 c0       	rjmp	.+8      	; 0xf0e <vfprintf+0x31a>
     f06:	8a 2d       	mov	r24, r10
     f08:	86 78       	andi	r24, 0x86	; 134
     f0a:	09 f0       	breq	.+2      	; 0xf0e <vfprintf+0x31a>
     f0c:	b3 94       	inc	r11
     f0e:	a3 fc       	sbrc	r10, 3
     f10:	10 c0       	rjmp	.+32     	; 0xf32 <vfprintf+0x33e>
     f12:	a0 fe       	sbrs	r10, 0
     f14:	06 c0       	rjmp	.+12     	; 0xf22 <vfprintf+0x32e>
     f16:	b2 14       	cp	r11, r2
     f18:	80 f4       	brcc	.+32     	; 0xf3a <vfprintf+0x346>
     f1a:	28 0c       	add	r2, r8
     f1c:	92 2c       	mov	r9, r2
     f1e:	9b 18       	sub	r9, r11
     f20:	0d c0       	rjmp	.+26     	; 0xf3c <vfprintf+0x348>
     f22:	b2 14       	cp	r11, r2
     f24:	58 f4       	brcc	.+22     	; 0xf3c <vfprintf+0x348>
     f26:	b6 01       	movw	r22, r12
     f28:	80 e2       	ldi	r24, 0x20	; 32
     f2a:	90 e0       	ldi	r25, 0x00	; 0
     f2c:	76 d0       	rcall	.+236    	; 0x101a <fputc>
     f2e:	b3 94       	inc	r11
     f30:	f8 cf       	rjmp	.-16     	; 0xf22 <vfprintf+0x32e>
     f32:	b2 14       	cp	r11, r2
     f34:	18 f4       	brcc	.+6      	; 0xf3c <vfprintf+0x348>
     f36:	2b 18       	sub	r2, r11
     f38:	02 c0       	rjmp	.+4      	; 0xf3e <vfprintf+0x34a>
     f3a:	98 2c       	mov	r9, r8
     f3c:	21 2c       	mov	r2, r1
     f3e:	a4 fe       	sbrs	r10, 4
     f40:	0f c0       	rjmp	.+30     	; 0xf60 <vfprintf+0x36c>
     f42:	b6 01       	movw	r22, r12
     f44:	80 e3       	ldi	r24, 0x30	; 48
     f46:	90 e0       	ldi	r25, 0x00	; 0
     f48:	68 d0       	rcall	.+208    	; 0x101a <fputc>
     f4a:	a2 fe       	sbrs	r10, 2
     f4c:	16 c0       	rjmp	.+44     	; 0xf7a <vfprintf+0x386>
     f4e:	a1 fc       	sbrc	r10, 1
     f50:	03 c0       	rjmp	.+6      	; 0xf58 <vfprintf+0x364>
     f52:	88 e7       	ldi	r24, 0x78	; 120
     f54:	90 e0       	ldi	r25, 0x00	; 0
     f56:	02 c0       	rjmp	.+4      	; 0xf5c <vfprintf+0x368>
     f58:	88 e5       	ldi	r24, 0x58	; 88
     f5a:	90 e0       	ldi	r25, 0x00	; 0
     f5c:	b6 01       	movw	r22, r12
     f5e:	0c c0       	rjmp	.+24     	; 0xf78 <vfprintf+0x384>
     f60:	8a 2d       	mov	r24, r10
     f62:	86 78       	andi	r24, 0x86	; 134
     f64:	51 f0       	breq	.+20     	; 0xf7a <vfprintf+0x386>
     f66:	a1 fe       	sbrs	r10, 1
     f68:	02 c0       	rjmp	.+4      	; 0xf6e <vfprintf+0x37a>
     f6a:	8b e2       	ldi	r24, 0x2B	; 43
     f6c:	01 c0       	rjmp	.+2      	; 0xf70 <vfprintf+0x37c>
     f6e:	80 e2       	ldi	r24, 0x20	; 32
     f70:	a7 fc       	sbrc	r10, 7
     f72:	8d e2       	ldi	r24, 0x2D	; 45
     f74:	b6 01       	movw	r22, r12
     f76:	90 e0       	ldi	r25, 0x00	; 0
     f78:	50 d0       	rcall	.+160    	; 0x101a <fputc>
     f7a:	89 14       	cp	r8, r9
     f7c:	30 f4       	brcc	.+12     	; 0xf8a <vfprintf+0x396>
     f7e:	b6 01       	movw	r22, r12
     f80:	80 e3       	ldi	r24, 0x30	; 48
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	4a d0       	rcall	.+148    	; 0x101a <fputc>
     f86:	9a 94       	dec	r9
     f88:	f8 cf       	rjmp	.-16     	; 0xf7a <vfprintf+0x386>
     f8a:	8a 94       	dec	r8
     f8c:	f3 01       	movw	r30, r6
     f8e:	e8 0d       	add	r30, r8
     f90:	f1 1d       	adc	r31, r1
     f92:	80 81       	ld	r24, Z
     f94:	b6 01       	movw	r22, r12
     f96:	90 e0       	ldi	r25, 0x00	; 0
     f98:	40 d0       	rcall	.+128    	; 0x101a <fputc>
     f9a:	81 10       	cpse	r8, r1
     f9c:	f6 cf       	rjmp	.-20     	; 0xf8a <vfprintf+0x396>
     f9e:	22 20       	and	r2, r2
     fa0:	09 f4       	brne	.+2      	; 0xfa4 <vfprintf+0x3b0>
     fa2:	4e ce       	rjmp	.-868    	; 0xc40 <vfprintf+0x4c>
     fa4:	b6 01       	movw	r22, r12
     fa6:	80 e2       	ldi	r24, 0x20	; 32
     fa8:	90 e0       	ldi	r25, 0x00	; 0
     faa:	37 d0       	rcall	.+110    	; 0x101a <fputc>
     fac:	2a 94       	dec	r2
     fae:	f7 cf       	rjmp	.-18     	; 0xf9e <vfprintf+0x3aa>
     fb0:	f6 01       	movw	r30, r12
     fb2:	86 81       	ldd	r24, Z+6	; 0x06
     fb4:	97 81       	ldd	r25, Z+7	; 0x07
     fb6:	02 c0       	rjmp	.+4      	; 0xfbc <vfprintf+0x3c8>
     fb8:	8f ef       	ldi	r24, 0xFF	; 255
     fba:	9f ef       	ldi	r25, 0xFF	; 255
     fbc:	2b 96       	adiw	r28, 0x0b	; 11
     fbe:	0f b6       	in	r0, 0x3f	; 63
     fc0:	f8 94       	cli
     fc2:	de bf       	out	0x3e, r29	; 62
     fc4:	0f be       	out	0x3f, r0	; 63
     fc6:	cd bf       	out	0x3d, r28	; 61
     fc8:	df 91       	pop	r29
     fca:	cf 91       	pop	r28
     fcc:	1f 91       	pop	r17
     fce:	0f 91       	pop	r16
     fd0:	ff 90       	pop	r15
     fd2:	ef 90       	pop	r14
     fd4:	df 90       	pop	r13
     fd6:	cf 90       	pop	r12
     fd8:	bf 90       	pop	r11
     fda:	af 90       	pop	r10
     fdc:	9f 90       	pop	r9
     fde:	8f 90       	pop	r8
     fe0:	7f 90       	pop	r7
     fe2:	6f 90       	pop	r6
     fe4:	5f 90       	pop	r5
     fe6:	4f 90       	pop	r4
     fe8:	3f 90       	pop	r3
     fea:	2f 90       	pop	r2
     fec:	08 95       	ret

00000fee <strnlen_P>:
     fee:	fc 01       	movw	r30, r24
     ff0:	05 90       	lpm	r0, Z+
     ff2:	61 50       	subi	r22, 0x01	; 1
     ff4:	70 40       	sbci	r23, 0x00	; 0
     ff6:	01 10       	cpse	r0, r1
     ff8:	d8 f7       	brcc	.-10     	; 0xff0 <strnlen_P+0x2>
     ffa:	80 95       	com	r24
     ffc:	90 95       	com	r25
     ffe:	8e 0f       	add	r24, r30
    1000:	9f 1f       	adc	r25, r31
    1002:	08 95       	ret

00001004 <strnlen>:
    1004:	fc 01       	movw	r30, r24
    1006:	61 50       	subi	r22, 0x01	; 1
    1008:	70 40       	sbci	r23, 0x00	; 0
    100a:	01 90       	ld	r0, Z+
    100c:	01 10       	cpse	r0, r1
    100e:	d8 f7       	brcc	.-10     	; 0x1006 <strnlen+0x2>
    1010:	80 95       	com	r24
    1012:	90 95       	com	r25
    1014:	8e 0f       	add	r24, r30
    1016:	9f 1f       	adc	r25, r31
    1018:	08 95       	ret

0000101a <fputc>:
    101a:	0f 93       	push	r16
    101c:	1f 93       	push	r17
    101e:	cf 93       	push	r28
    1020:	df 93       	push	r29
    1022:	fb 01       	movw	r30, r22
    1024:	23 81       	ldd	r18, Z+3	; 0x03
    1026:	21 fd       	sbrc	r18, 1
    1028:	03 c0       	rjmp	.+6      	; 0x1030 <fputc+0x16>
    102a:	8f ef       	ldi	r24, 0xFF	; 255
    102c:	9f ef       	ldi	r25, 0xFF	; 255
    102e:	2c c0       	rjmp	.+88     	; 0x1088 <fputc+0x6e>
    1030:	22 ff       	sbrs	r18, 2
    1032:	16 c0       	rjmp	.+44     	; 0x1060 <fputc+0x46>
    1034:	46 81       	ldd	r20, Z+6	; 0x06
    1036:	57 81       	ldd	r21, Z+7	; 0x07
    1038:	24 81       	ldd	r18, Z+4	; 0x04
    103a:	35 81       	ldd	r19, Z+5	; 0x05
    103c:	42 17       	cp	r20, r18
    103e:	53 07       	cpc	r21, r19
    1040:	44 f4       	brge	.+16     	; 0x1052 <fputc+0x38>
    1042:	a0 81       	ld	r26, Z
    1044:	b1 81       	ldd	r27, Z+1	; 0x01
    1046:	9d 01       	movw	r18, r26
    1048:	2f 5f       	subi	r18, 0xFF	; 255
    104a:	3f 4f       	sbci	r19, 0xFF	; 255
    104c:	31 83       	std	Z+1, r19	; 0x01
    104e:	20 83       	st	Z, r18
    1050:	8c 93       	st	X, r24
    1052:	26 81       	ldd	r18, Z+6	; 0x06
    1054:	37 81       	ldd	r19, Z+7	; 0x07
    1056:	2f 5f       	subi	r18, 0xFF	; 255
    1058:	3f 4f       	sbci	r19, 0xFF	; 255
    105a:	37 83       	std	Z+7, r19	; 0x07
    105c:	26 83       	std	Z+6, r18	; 0x06
    105e:	14 c0       	rjmp	.+40     	; 0x1088 <fputc+0x6e>
    1060:	8b 01       	movw	r16, r22
    1062:	ec 01       	movw	r28, r24
    1064:	fb 01       	movw	r30, r22
    1066:	00 84       	ldd	r0, Z+8	; 0x08
    1068:	f1 85       	ldd	r31, Z+9	; 0x09
    106a:	e0 2d       	mov	r30, r0
    106c:	09 95       	icall
    106e:	89 2b       	or	r24, r25
    1070:	e1 f6       	brne	.-72     	; 0x102a <fputc+0x10>
    1072:	d8 01       	movw	r26, r16
    1074:	16 96       	adiw	r26, 0x06	; 6
    1076:	8d 91       	ld	r24, X+
    1078:	9c 91       	ld	r25, X
    107a:	17 97       	sbiw	r26, 0x07	; 7
    107c:	01 96       	adiw	r24, 0x01	; 1
    107e:	17 96       	adiw	r26, 0x07	; 7
    1080:	9c 93       	st	X, r25
    1082:	8e 93       	st	-X, r24
    1084:	16 97       	sbiw	r26, 0x06	; 6
    1086:	ce 01       	movw	r24, r28
    1088:	df 91       	pop	r29
    108a:	cf 91       	pop	r28
    108c:	1f 91       	pop	r17
    108e:	0f 91       	pop	r16
    1090:	08 95       	ret

00001092 <__ultoa_invert>:
    1092:	fa 01       	movw	r30, r20
    1094:	aa 27       	eor	r26, r26
    1096:	28 30       	cpi	r18, 0x08	; 8
    1098:	51 f1       	breq	.+84     	; 0x10ee <__ultoa_invert+0x5c>
    109a:	20 31       	cpi	r18, 0x10	; 16
    109c:	81 f1       	breq	.+96     	; 0x10fe <__ultoa_invert+0x6c>
    109e:	e8 94       	clt
    10a0:	6f 93       	push	r22
    10a2:	6e 7f       	andi	r22, 0xFE	; 254
    10a4:	6e 5f       	subi	r22, 0xFE	; 254
    10a6:	7f 4f       	sbci	r23, 0xFF	; 255
    10a8:	8f 4f       	sbci	r24, 0xFF	; 255
    10aa:	9f 4f       	sbci	r25, 0xFF	; 255
    10ac:	af 4f       	sbci	r26, 0xFF	; 255
    10ae:	b1 e0       	ldi	r27, 0x01	; 1
    10b0:	3e d0       	rcall	.+124    	; 0x112e <__stack+0x2f>
    10b2:	b4 e0       	ldi	r27, 0x04	; 4
    10b4:	3c d0       	rcall	.+120    	; 0x112e <__stack+0x2f>
    10b6:	67 0f       	add	r22, r23
    10b8:	78 1f       	adc	r23, r24
    10ba:	89 1f       	adc	r24, r25
    10bc:	9a 1f       	adc	r25, r26
    10be:	a1 1d       	adc	r26, r1
    10c0:	68 0f       	add	r22, r24
    10c2:	79 1f       	adc	r23, r25
    10c4:	8a 1f       	adc	r24, r26
    10c6:	91 1d       	adc	r25, r1
    10c8:	a1 1d       	adc	r26, r1
    10ca:	6a 0f       	add	r22, r26
    10cc:	71 1d       	adc	r23, r1
    10ce:	81 1d       	adc	r24, r1
    10d0:	91 1d       	adc	r25, r1
    10d2:	a1 1d       	adc	r26, r1
    10d4:	20 d0       	rcall	.+64     	; 0x1116 <__stack+0x17>
    10d6:	09 f4       	brne	.+2      	; 0x10da <__ultoa_invert+0x48>
    10d8:	68 94       	set
    10da:	3f 91       	pop	r19
    10dc:	2a e0       	ldi	r18, 0x0A	; 10
    10de:	26 9f       	mul	r18, r22
    10e0:	11 24       	eor	r1, r1
    10e2:	30 19       	sub	r19, r0
    10e4:	30 5d       	subi	r19, 0xD0	; 208
    10e6:	31 93       	st	Z+, r19
    10e8:	de f6       	brtc	.-74     	; 0x10a0 <__ultoa_invert+0xe>
    10ea:	cf 01       	movw	r24, r30
    10ec:	08 95       	ret
    10ee:	46 2f       	mov	r20, r22
    10f0:	47 70       	andi	r20, 0x07	; 7
    10f2:	40 5d       	subi	r20, 0xD0	; 208
    10f4:	41 93       	st	Z+, r20
    10f6:	b3 e0       	ldi	r27, 0x03	; 3
    10f8:	0f d0       	rcall	.+30     	; 0x1118 <__stack+0x19>
    10fa:	c9 f7       	brne	.-14     	; 0x10ee <__ultoa_invert+0x5c>
    10fc:	f6 cf       	rjmp	.-20     	; 0x10ea <__ultoa_invert+0x58>
    10fe:	46 2f       	mov	r20, r22
    1100:	4f 70       	andi	r20, 0x0F	; 15
    1102:	40 5d       	subi	r20, 0xD0	; 208
    1104:	4a 33       	cpi	r20, 0x3A	; 58
    1106:	18 f0       	brcs	.+6      	; 0x110e <__stack+0xf>
    1108:	49 5d       	subi	r20, 0xD9	; 217
    110a:	31 fd       	sbrc	r19, 1
    110c:	40 52       	subi	r20, 0x20	; 32
    110e:	41 93       	st	Z+, r20
    1110:	02 d0       	rcall	.+4      	; 0x1116 <__stack+0x17>
    1112:	a9 f7       	brne	.-22     	; 0x10fe <__ultoa_invert+0x6c>
    1114:	ea cf       	rjmp	.-44     	; 0x10ea <__ultoa_invert+0x58>
    1116:	b4 e0       	ldi	r27, 0x04	; 4
    1118:	a6 95       	lsr	r26
    111a:	97 95       	ror	r25
    111c:	87 95       	ror	r24
    111e:	77 95       	ror	r23
    1120:	67 95       	ror	r22
    1122:	ba 95       	dec	r27
    1124:	c9 f7       	brne	.-14     	; 0x1118 <__stack+0x19>
    1126:	00 97       	sbiw	r24, 0x00	; 0
    1128:	61 05       	cpc	r22, r1
    112a:	71 05       	cpc	r23, r1
    112c:	08 95       	ret
    112e:	9b 01       	movw	r18, r22
    1130:	ac 01       	movw	r20, r24
    1132:	0a 2e       	mov	r0, r26
    1134:	06 94       	lsr	r0
    1136:	57 95       	ror	r21
    1138:	47 95       	ror	r20
    113a:	37 95       	ror	r19
    113c:	27 95       	ror	r18
    113e:	ba 95       	dec	r27
    1140:	c9 f7       	brne	.-14     	; 0x1134 <__stack+0x35>
    1142:	62 0f       	add	r22, r18
    1144:	73 1f       	adc	r23, r19
    1146:	84 1f       	adc	r24, r20
    1148:	95 1f       	adc	r25, r21
    114a:	a0 1d       	adc	r26, r0
    114c:	08 95       	ret

0000114e <_exit>:
    114e:	f8 94       	cli

00001150 <__stop_program>:
    1150:	ff cf       	rjmp	.-2      	; 0x1150 <__stop_program>
